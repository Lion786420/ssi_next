"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-abi";
exports.ids = ["vendor-chunks/web3-eth-abi"];
exports.modules = {

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/errors_api.js":
/*!********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/errors_api.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeErrorSignature = void 0;\n/**\n *\n *  @module ABI\n */\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js\");\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\nconst encodeErrorSignature = (functionName) => {\n    if (typeof functionName !== 'string' && !(0, utils_js_1.isAbiErrorFragment)(functionName)) {\n        throw new web3_errors_1.AbiError('Invalid parameter value in encodeErrorSignature');\n    }\n    let name;\n    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n        name = (0, utils_js_1.jsonInterfaceMethodToString)(functionName);\n    }\n    else {\n        name = functionName;\n    }\n    return (0, web3_utils_1.sha3Raw)(name);\n};\nexports.encodeErrorSignature = encodeErrorSignature;\n//# sourceMappingURL=errors_api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2FwaS9lcnJvcnNfYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBWTtBQUN6QyxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBYTtBQUMzQyxtQkFBbUIsbUJBQU8sQ0FBQywwRkFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2lzc3Vlcl9ob2xkZXJfdmVyaWZpZXIvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2FwaS9lcnJvcnNfYXBpLmpzPzQ1MmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZW5jb2RlRXJyb3JTaWduYXR1cmUgPSB2b2lkIDA7XG4vKipcbiAqXG4gKiAgQG1vZHVsZSBBQklcbiAqL1xuY29uc3Qgd2ViM191dGlsc18xID0gcmVxdWlyZShcIndlYjMtdXRpbHNcIik7XG5jb25zdCB3ZWIzX2Vycm9yc18xID0gcmVxdWlyZShcIndlYjMtZXJyb3JzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy5qc1wiKTtcbi8qKlxuICogRW5jb2RlcyB0aGUgZXJyb3IgbmFtZSB0byBpdHMgQUJJIHNpZ25hdHVyZSwgd2hpY2ggYXJlIHRoZSBzaGEzIGhhc2ggb2YgdGhlIGVycm9yIG5hbWUgaW5jbHVkaW5nIGlucHV0IHR5cGVzLlxuICovXG5jb25zdCBlbmNvZGVFcnJvclNpZ25hdHVyZSA9IChmdW5jdGlvbk5hbWUpID0+IHtcbiAgICBpZiAodHlwZW9mIGZ1bmN0aW9uTmFtZSAhPT0gJ3N0cmluZycgJiYgISgwLCB1dGlsc19qc18xLmlzQWJpRXJyb3JGcmFnbWVudCkoZnVuY3Rpb25OYW1lKSkge1xuICAgICAgICB0aHJvdyBuZXcgd2ViM19lcnJvcnNfMS5BYmlFcnJvcignSW52YWxpZCBwYXJhbWV0ZXIgdmFsdWUgaW4gZW5jb2RlRXJyb3JTaWduYXR1cmUnKTtcbiAgICB9XG4gICAgbGV0IG5hbWU7XG4gICAgaWYgKGZ1bmN0aW9uTmFtZSAmJiAodHlwZW9mIGZ1bmN0aW9uTmFtZSA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZnVuY3Rpb25OYW1lID09PSAnb2JqZWN0JykpIHtcbiAgICAgICAgbmFtZSA9ICgwLCB1dGlsc19qc18xLmpzb25JbnRlcmZhY2VNZXRob2RUb1N0cmluZykoZnVuY3Rpb25OYW1lKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG5hbWUgPSBmdW5jdGlvbk5hbWU7XG4gICAgfVxuICAgIHJldHVybiAoMCwgd2ViM191dGlsc18xLnNoYTNSYXcpKG5hbWUpO1xufTtcbmV4cG9ydHMuZW5jb2RlRXJyb3JTaWduYXR1cmUgPSBlbmNvZGVFcnJvclNpZ25hdHVyZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yc19hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/errors_api.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/events_api.js":
/*!********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/events_api.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeEventSignature = void 0;\n/**\n *\n *  @module ABI\n */\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js\");\n/**\n * Encodes the event name to its ABI signature, which are the sha3 hash of the event name including input types.\n * @param functionName - The event name to encode, or the {@link AbiEventFragment} object of the event. If string, it has to be in the form of `eventName(param1Type,param2Type,...)`. eg: myEvent(uint256,bytes32).\n * @returns - The ABI signature of the event.\n *\n * @example\n * ```ts\n * const event = web3.eth.abi.encodeEventSignature({\n *   name: \"myEvent\",\n *   type: \"event\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"bytes32\",\n *       name: \"myBytes\",\n *     },\n *   ],\n * });\n * console.log(event);\n * > 0xf2eeb729e636a8cb783be044acf6b7b1e2c5863735b60d6daae84c366ee87d97\n *\n *  const event = web3.eth.abi.encodeEventSignature({\n *   inputs: [\n *     {\n *       indexed: true,\n *       name: \"from\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: true,\n *       name: \"to\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: false,\n *       name: \"value\",\n *       type: \"uint256\",\n *     },\n *   ],\n *   name: \"Transfer\",\n *   type: \"event\",\n * });\n * console.log(event);\n * > 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n * ```\n */\nconst encodeEventSignature = (functionName) => {\n    if (typeof functionName !== 'string' && !(0, utils_js_1.isAbiEventFragment)(functionName)) {\n        throw new web3_errors_1.AbiError('Invalid parameter value in encodeEventSignature');\n    }\n    let name;\n    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n        name = (0, utils_js_1.jsonInterfaceMethodToString)(functionName);\n    }\n    else {\n        name = functionName;\n    }\n    return (0, web3_utils_1.sha3Raw)(name);\n};\nexports.encodeEventSignature = encodeEventSignature;\n//# sourceMappingURL=events_api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2FwaS9ldmVudHNfYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBWTtBQUN6QyxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBYTtBQUMzQyxtQkFBbUIsbUJBQU8sQ0FBQywwRkFBYTtBQUN4QztBQUNBO0FBQ0EsMkRBQTJELHdCQUF3QjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pc3N1ZXJfaG9sZGVyX3ZlcmlmaWVyLy4vc3JjL3BhZ2VzL2FwaS9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9jb21tb25qcy9hcGkvZXZlbnRzX2FwaS5qcz8zMmIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmVuY29kZUV2ZW50U2lnbmF0dXJlID0gdm9pZCAwO1xuLyoqXG4gKlxuICogIEBtb2R1bGUgQUJJXG4gKi9cbmNvbnN0IHdlYjNfdXRpbHNfMSA9IHJlcXVpcmUoXCJ3ZWIzLXV0aWxzXCIpO1xuY29uc3Qgd2ViM19lcnJvcnNfMSA9IHJlcXVpcmUoXCJ3ZWIzLWVycm9yc1wiKTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMuanNcIik7XG4vKipcbiAqIEVuY29kZXMgdGhlIGV2ZW50IG5hbWUgdG8gaXRzIEFCSSBzaWduYXR1cmUsIHdoaWNoIGFyZSB0aGUgc2hhMyBoYXNoIG9mIHRoZSBldmVudCBuYW1lIGluY2x1ZGluZyBpbnB1dCB0eXBlcy5cbiAqIEBwYXJhbSBmdW5jdGlvbk5hbWUgLSBUaGUgZXZlbnQgbmFtZSB0byBlbmNvZGUsIG9yIHRoZSB7QGxpbmsgQWJpRXZlbnRGcmFnbWVudH0gb2JqZWN0IG9mIHRoZSBldmVudC4gSWYgc3RyaW5nLCBpdCBoYXMgdG8gYmUgaW4gdGhlIGZvcm0gb2YgYGV2ZW50TmFtZShwYXJhbTFUeXBlLHBhcmFtMlR5cGUsLi4uKWAuIGVnOiBteUV2ZW50KHVpbnQyNTYsYnl0ZXMzMikuXG4gKiBAcmV0dXJucyAtIFRoZSBBQkkgc2lnbmF0dXJlIG9mIHRoZSBldmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnN0IGV2ZW50ID0gd2ViMy5ldGguYWJpLmVuY29kZUV2ZW50U2lnbmF0dXJlKHtcbiAqICAgbmFtZTogXCJteUV2ZW50XCIsXG4gKiAgIHR5cGU6IFwiZXZlbnRcIixcbiAqICAgaW5wdXRzOiBbXG4gKiAgICAge1xuICogICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgICBuYW1lOiBcIm15TnVtYmVyXCIsXG4gKiAgICAgfSxcbiAqICAgICB7XG4gKiAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAqICAgICAgIG5hbWU6IFwibXlCeXRlc1wiLFxuICogICAgIH0sXG4gKiAgIF0sXG4gKiB9KTtcbiAqIGNvbnNvbGUubG9nKGV2ZW50KTtcbiAqID4gMHhmMmVlYjcyOWU2MzZhOGNiNzgzYmUwNDRhY2Y2YjdiMWUyYzU4NjM3MzViNjBkNmRhYWU4NGMzNjZlZTg3ZDk3XG4gKlxuICogIGNvbnN0IGV2ZW50ID0gd2ViMy5ldGguYWJpLmVuY29kZUV2ZW50U2lnbmF0dXJlKHtcbiAqICAgaW5wdXRzOiBbXG4gKiAgICAge1xuICogICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAqICAgICAgIG5hbWU6IFwiZnJvbVwiLFxuICogICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gKiAgICAgfSxcbiAqICAgICB7XG4gKiAgICAgICBpbmRleGVkOiB0cnVlLFxuICogICAgICAgbmFtZTogXCJ0b1wiLFxuICogICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gKiAgICAgfSxcbiAqICAgICB7XG4gKiAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAqICAgICAgIG5hbWU6IFwidmFsdWVcIixcbiAqICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICogICAgIH0sXG4gKiAgIF0sXG4gKiAgIG5hbWU6IFwiVHJhbnNmZXJcIixcbiAqICAgdHlwZTogXCJldmVudFwiLFxuICogfSk7XG4gKiBjb25zb2xlLmxvZyhldmVudCk7XG4gKiA+IDB4ZGRmMjUyYWQxYmUyYzg5YjY5YzJiMDY4ZmMzNzhkYWE5NTJiYTdmMTYzYzRhMTE2MjhmNTVhNGRmNTIzYjNlZlxuICogYGBgXG4gKi9cbmNvbnN0IGVuY29kZUV2ZW50U2lnbmF0dXJlID0gKGZ1bmN0aW9uTmFtZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgZnVuY3Rpb25OYW1lICE9PSAnc3RyaW5nJyAmJiAhKDAsIHV0aWxzX2pzXzEuaXNBYmlFdmVudEZyYWdtZW50KShmdW5jdGlvbk5hbWUpKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdJbnZhbGlkIHBhcmFtZXRlciB2YWx1ZSBpbiBlbmNvZGVFdmVudFNpZ25hdHVyZScpO1xuICAgIH1cbiAgICBsZXQgbmFtZTtcbiAgICBpZiAoZnVuY3Rpb25OYW1lICYmICh0eXBlb2YgZnVuY3Rpb25OYW1lID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBmdW5jdGlvbk5hbWUgPT09ICdvYmplY3QnKSkge1xuICAgICAgICBuYW1lID0gKDAsIHV0aWxzX2pzXzEuanNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nKShmdW5jdGlvbk5hbWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbmFtZSA9IGZ1bmN0aW9uTmFtZTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCB3ZWIzX3V0aWxzXzEuc2hhM1JhdykobmFtZSk7XG59O1xuZXhwb3J0cy5lbmNvZGVFdmVudFNpZ25hdHVyZSA9IGVuY29kZUV2ZW50U2lnbmF0dXJlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRzX2FwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/events_api.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/functions_api.js":
/*!***********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/functions_api.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeFunctionCall = exports.encodeFunctionSignature = void 0;\n/**\n *\n *  @module ABI\n */\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js\");\nconst parameters_api_js_1 = __webpack_require__(/*! ./parameters_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/parameters_api.js\");\n// todo Add link to JSON interface documentation\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n * @param functionName - The function name to encode or the `JSON interface` object of the function.\n * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)\n * @returns - The ABI signature of the function.\n * @example\n * ```ts\n * const signature = web3.eth.abi.encodeFunctionSignature({\n *   name: \"myMethod\",\n *   type: \"function\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"string\",\n *       name: \"myString\",\n *     },\n *   ],\n * });\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');\n * console.log(signature);\n * > 0xb88d4fde\n * ```\n */\nconst encodeFunctionSignature = (functionName) => {\n    if (typeof functionName !== 'string' && !(0, utils_js_1.isAbiFunctionFragment)(functionName)) {\n        throw new web3_errors_1.AbiError('Invalid parameter value in encodeFunctionSignature');\n    }\n    let name;\n    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n        name = (0, utils_js_1.jsonInterfaceMethodToString)(functionName);\n    }\n    else {\n        name = functionName;\n    }\n    return (0, web3_utils_1.sha3Raw)(name).slice(0, 10);\n};\nexports.encodeFunctionSignature = encodeFunctionSignature;\n// todo Add link to JSON interface documentation\n/**\n * Encodes a function call using its `JSON interface` object and given parameters.\n * @param jsonInterface - The `JSON interface` object of the function.\n * @param params - The parameters to encode\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @example\n * ```ts\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     name: \"myMethod\",\n *     type: \"function\",\n *     inputs: [\n *       {\n *         type: \"uint256\",\n *         name: \"myNumber\",\n *       },\n *       {\n *         type: \"string\",\n *         name: \"myString\",\n *       },\n *     ],\n *   },\n *   [\"2345675643\", \"Hello!%\"]\n * );\n * console.log(sig);\n * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n *\n *\n *\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     inputs: [\n *       {\n *         name: \"account\",\n *         type: \"address\",\n *       },\n *     ],\n *     name: \"balanceOf\",\n *     outputs: [\n *       {\n *         name: \"\",\n *         type: \"uint256\",\n *       },\n *     ],\n *     stateMutability: \"view\",\n *     type: \"function\",\n *   },\n *   [\"0x1234567890123456789012345678901234567890\"]\n * );\n *\n * console.log(sig);\n * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890\n * ```\n */\nconst encodeFunctionCall = (jsonInterface, params) => {\n    var _a;\n    if (!(0, utils_js_1.isAbiFunctionFragment)(jsonInterface)) {\n        throw new web3_errors_1.AbiError('Invalid parameter value in encodeFunctionCall');\n    }\n    return `${(0, exports.encodeFunctionSignature)(jsonInterface)}${(0, parameters_api_js_1.encodeParameters)((_a = jsonInterface.inputs) !== null && _a !== void 0 ? _a : [], params !== null && params !== void 0 ? params : []).replace('0x', '')}`;\n};\nexports.encodeFunctionCall = encodeFunctionCall;\n//# sourceMappingURL=functions_api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/functions_api.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/logs_api.js":
/*!******************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/logs_api.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeLog = void 0;\nconst parameters_api_js_1 = __webpack_require__(/*! ./parameters_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/parameters_api.js\");\nconst STATIC_TYPES = ['bool', 'string', 'int', 'uint', 'address', 'fixed', 'ufixed'];\nconst _decodeParameter = (inputType, clonedTopic) => inputType === 'string' ? clonedTopic : (0, parameters_api_js_1.decodeParameter)(inputType, clonedTopic);\n/**\n * Decodes ABI-encoded log data and indexed topic data.\n * @param inputs - A {@link AbiParameter} input array. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param data - The ABI byte code in the `data` field of a log.\n * @param topics - An array with the index parameter topics of the log, without the topic[0] if its a non-anonymous event, otherwise with topic[0]\n * @returns - The result object containing the decoded parameters.\n *\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeLog(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *        indexed: true,\n *      },\n *      {\n *        type: \"uint8\",\n *        name: \"mySmallNumber\",\n *        indexed: true,\n *      },\n *    ],\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000\",\n *    [\n *      \"0x000000000000000000000000000000000000000000000000000000000000f310\",\n *      \"0x0000000000000000000000000000000000000000000000000000000000000010\",\n *    ]\n *  );\n * > {\n *  '0': 'Hello%!',\n *  '1': 62224n,\n *  '2': 16n,\n *  __length__: 3,\n *  myString: 'Hello%!',\n *  myNumber: 62224n,\n *  mySmallNumber: 16n\n * }\n * ```\n */\nconst decodeLog = (inputs, data, topics) => {\n    const clonedTopics = Array.isArray(topics) ? topics : [topics];\n    const indexedInputs = {};\n    const nonIndexedInputs = {};\n    for (const [i, input] of inputs.entries()) {\n        if (input.indexed) {\n            indexedInputs[i] = input;\n        }\n        else {\n            nonIndexedInputs[i] = input;\n        }\n    }\n    const decodedNonIndexedInputs = data\n        ? (0, parameters_api_js_1.decodeParametersWith)(Object.values(nonIndexedInputs), data, true)\n        : { __length__: 0 };\n    // If topics are more than indexed inputs, that means first topic is the event signature\n    const offset = clonedTopics.length - Object.keys(indexedInputs).length;\n    const decodedIndexedInputs = Object.values(indexedInputs).map((input, index) => STATIC_TYPES.some(s => input.type.startsWith(s))\n        ? _decodeParameter(input.type, clonedTopics[index + offset])\n        : clonedTopics[index + offset]);\n    const returnValues = { __length__: 0 };\n    let indexedCounter = 0;\n    let nonIndexedCounter = 0;\n    for (const [i, res] of inputs.entries()) {\n        returnValues[i] = res.type === 'string' ? '' : undefined;\n        if (indexedInputs[i]) {\n            returnValues[i] = decodedIndexedInputs[indexedCounter];\n            indexedCounter += 1;\n        }\n        if (nonIndexedInputs[i]) {\n            returnValues[i] = decodedNonIndexedInputs[String(nonIndexedCounter)];\n            nonIndexedCounter += 1;\n        }\n        if (res.name) {\n            returnValues[res.name] = returnValues[i];\n        }\n        returnValues.__length__ += 1;\n    }\n    return returnValues;\n};\nexports.decodeLog = decodeLog;\n//# sourceMappingURL=logs_api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2FwaS9sb2dzX2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLDRCQUE0QixtQkFBTyxDQUFDLCtHQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvQkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pc3N1ZXJfaG9sZGVyX3ZlcmlmaWVyLy4vc3JjL3BhZ2VzL2FwaS9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9jb21tb25qcy9hcGkvbG9nc19hcGkuanM/NmE5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVMb2cgPSB2b2lkIDA7XG5jb25zdCBwYXJhbWV0ZXJzX2FwaV9qc18xID0gcmVxdWlyZShcIi4vcGFyYW1ldGVyc19hcGkuanNcIik7XG5jb25zdCBTVEFUSUNfVFlQRVMgPSBbJ2Jvb2wnLCAnc3RyaW5nJywgJ2ludCcsICd1aW50JywgJ2FkZHJlc3MnLCAnZml4ZWQnLCAndWZpeGVkJ107XG5jb25zdCBfZGVjb2RlUGFyYW1ldGVyID0gKGlucHV0VHlwZSwgY2xvbmVkVG9waWMpID0+IGlucHV0VHlwZSA9PT0gJ3N0cmluZycgPyBjbG9uZWRUb3BpYyA6ICgwLCBwYXJhbWV0ZXJzX2FwaV9qc18xLmRlY29kZVBhcmFtZXRlcikoaW5wdXRUeXBlLCBjbG9uZWRUb3BpYyk7XG4vKipcbiAqIERlY29kZXMgQUJJLWVuY29kZWQgbG9nIGRhdGEgYW5kIGluZGV4ZWQgdG9waWMgZGF0YS5cbiAqIEBwYXJhbSBpbnB1dHMgLSBBIHtAbGluayBBYmlQYXJhbWV0ZXJ9IGlucHV0IGFycmF5LiBTZWUgdGhlIFtTb2xpZGl0eSBkb2N1bWVudGF0aW9uXShodHRwczovL2RvY3Muc29saWRpdHlsYW5nLm9yZy9lbi9kZXZlbG9wL3R5cGVzLmh0bWwpIGZvciBhIGxpc3Qgb2YgdHlwZXMuXG4gKiBAcGFyYW0gZGF0YSAtIFRoZSBBQkkgYnl0ZSBjb2RlIGluIHRoZSBgZGF0YWAgZmllbGQgb2YgYSBsb2cuXG4gKiBAcGFyYW0gdG9waWNzIC0gQW4gYXJyYXkgd2l0aCB0aGUgaW5kZXggcGFyYW1ldGVyIHRvcGljcyBvZiB0aGUgbG9nLCB3aXRob3V0IHRoZSB0b3BpY1swXSBpZiBpdHMgYSBub24tYW5vbnltb3VzIGV2ZW50LCBvdGhlcndpc2Ugd2l0aCB0b3BpY1swXVxuICogQHJldHVybnMgLSBUaGUgcmVzdWx0IG9iamVjdCBjb250YWluaW5nIHRoZSBkZWNvZGVkIHBhcmFtZXRlcnMuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBsZXQgcmVzID0gd2ViMy5ldGguYWJpLmRlY29kZUxvZyhcbiAqICAgIFtcbiAqICAgICAge1xuICogICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gKiAgICAgICAgbmFtZTogXCJteVN0cmluZ1wiLFxuICogICAgICB9LFxuICogICAgICB7XG4gKiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgbmFtZTogXCJteU51bWJlclwiLFxuICogICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gKiAgICAgIH0sXG4gKiAgICAgIHtcbiAqICAgICAgICB0eXBlOiBcInVpbnQ4XCIsXG4gKiAgICAgICAgbmFtZTogXCJteVNtYWxsTnVtYmVyXCIsXG4gKiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAqICAgICAgfSxcbiAqICAgIF0sXG4gKiAgICBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDc0ODY1NmM2YzZmMjUyMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCIsXG4gKiAgICBbXG4gKiAgICAgIFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmMzEwXCIsXG4gKiAgICAgIFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwXCIsXG4gKiAgICBdXG4gKiAgKTtcbiAqID4ge1xuICogICcwJzogJ0hlbGxvJSEnLFxuICogICcxJzogNjIyMjRuLFxuICogICcyJzogMTZuLFxuICogIF9fbGVuZ3RoX186IDMsXG4gKiAgbXlTdHJpbmc6ICdIZWxsbyUhJyxcbiAqICBteU51bWJlcjogNjIyMjRuLFxuICogIG15U21hbGxOdW1iZXI6IDE2blxuICogfVxuICogYGBgXG4gKi9cbmNvbnN0IGRlY29kZUxvZyA9IChpbnB1dHMsIGRhdGEsIHRvcGljcykgPT4ge1xuICAgIGNvbnN0IGNsb25lZFRvcGljcyA9IEFycmF5LmlzQXJyYXkodG9waWNzKSA/IHRvcGljcyA6IFt0b3BpY3NdO1xuICAgIGNvbnN0IGluZGV4ZWRJbnB1dHMgPSB7fTtcbiAgICBjb25zdCBub25JbmRleGVkSW5wdXRzID0ge307XG4gICAgZm9yIChjb25zdCBbaSwgaW5wdXRdIG9mIGlucHV0cy5lbnRyaWVzKCkpIHtcbiAgICAgICAgaWYgKGlucHV0LmluZGV4ZWQpIHtcbiAgICAgICAgICAgIGluZGV4ZWRJbnB1dHNbaV0gPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG5vbkluZGV4ZWRJbnB1dHNbaV0gPSBpbnB1dDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBkZWNvZGVkTm9uSW5kZXhlZElucHV0cyA9IGRhdGFcbiAgICAgICAgPyAoMCwgcGFyYW1ldGVyc19hcGlfanNfMS5kZWNvZGVQYXJhbWV0ZXJzV2l0aCkoT2JqZWN0LnZhbHVlcyhub25JbmRleGVkSW5wdXRzKSwgZGF0YSwgdHJ1ZSlcbiAgICAgICAgOiB7IF9fbGVuZ3RoX186IDAgfTtcbiAgICAvLyBJZiB0b3BpY3MgYXJlIG1vcmUgdGhhbiBpbmRleGVkIGlucHV0cywgdGhhdCBtZWFucyBmaXJzdCB0b3BpYyBpcyB0aGUgZXZlbnQgc2lnbmF0dXJlXG4gICAgY29uc3Qgb2Zmc2V0ID0gY2xvbmVkVG9waWNzLmxlbmd0aCAtIE9iamVjdC5rZXlzKGluZGV4ZWRJbnB1dHMpLmxlbmd0aDtcbiAgICBjb25zdCBkZWNvZGVkSW5kZXhlZElucHV0cyA9IE9iamVjdC52YWx1ZXMoaW5kZXhlZElucHV0cykubWFwKChpbnB1dCwgaW5kZXgpID0+IFNUQVRJQ19UWVBFUy5zb21lKHMgPT4gaW5wdXQudHlwZS5zdGFydHNXaXRoKHMpKVxuICAgICAgICA/IF9kZWNvZGVQYXJhbWV0ZXIoaW5wdXQudHlwZSwgY2xvbmVkVG9waWNzW2luZGV4ICsgb2Zmc2V0XSlcbiAgICAgICAgOiBjbG9uZWRUb3BpY3NbaW5kZXggKyBvZmZzZXRdKTtcbiAgICBjb25zdCByZXR1cm5WYWx1ZXMgPSB7IF9fbGVuZ3RoX186IDAgfTtcbiAgICBsZXQgaW5kZXhlZENvdW50ZXIgPSAwO1xuICAgIGxldCBub25JbmRleGVkQ291bnRlciA9IDA7XG4gICAgZm9yIChjb25zdCBbaSwgcmVzXSBvZiBpbnB1dHMuZW50cmllcygpKSB7XG4gICAgICAgIHJldHVyblZhbHVlc1tpXSA9IHJlcy50eXBlID09PSAnc3RyaW5nJyA/ICcnIDogdW5kZWZpbmVkO1xuICAgICAgICBpZiAoaW5kZXhlZElucHV0c1tpXSkge1xuICAgICAgICAgICAgcmV0dXJuVmFsdWVzW2ldID0gZGVjb2RlZEluZGV4ZWRJbnB1dHNbaW5kZXhlZENvdW50ZXJdO1xuICAgICAgICAgICAgaW5kZXhlZENvdW50ZXIgKz0gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9uSW5kZXhlZElucHV0c1tpXSkge1xuICAgICAgICAgICAgcmV0dXJuVmFsdWVzW2ldID0gZGVjb2RlZE5vbkluZGV4ZWRJbnB1dHNbU3RyaW5nKG5vbkluZGV4ZWRDb3VudGVyKV07XG4gICAgICAgICAgICBub25JbmRleGVkQ291bnRlciArPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXMubmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuVmFsdWVzW3Jlcy5uYW1lXSA9IHJldHVyblZhbHVlc1tpXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm5WYWx1ZXMuX19sZW5ndGhfXyArPSAxO1xuICAgIH1cbiAgICByZXR1cm4gcmV0dXJuVmFsdWVzO1xufTtcbmV4cG9ydHMuZGVjb2RlTG9nID0gZGVjb2RlTG9nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nc19hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/logs_api.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/parameters_api.js":
/*!************************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/parameters_api.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeParameter = exports.decodeParameters = exports.decodeParametersWith = exports.encodeParameter = exports.inferTypesAndEncodeParameters = exports.encodeParameters = void 0;\n/**\n *\n *  @module ABI\n */\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst decode_js_1 = __webpack_require__(/*! ../coders/decode.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/decode.js\");\nconst encode_js_1 = __webpack_require__(/*! ../coders/encode.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/encode.js\");\nvar encode_js_2 = __webpack_require__(/*! ../coders/encode.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/encode.js\");\nObject.defineProperty(exports, \"encodeParameters\", ({ enumerable: true, get: function () { return encode_js_2.encodeParameters; } }));\nObject.defineProperty(exports, \"inferTypesAndEncodeParameters\", ({ enumerable: true, get: function () { return encode_js_2.inferTypesAndEncodeParameters; } }));\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param param - The actual parameter to encode.\n * @returns -  The ABI encoded parameter\n * @example\n * ```ts\n *  const res = web3.eth.abi.encodeParameter(\"uint256\", \"2345675643\");\n *  console.log(res);\n *  0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *  const res = web3.eth.abi.encodeParameter(\"uint\", \"2345675643\");\n *\n *  console.log(res);\n *  >0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *    const res = web3.eth.abi.encodeParameter(\"bytes32\", \"0xdf3234\");\n *\n *  console.log(res);\n *  >0xdf32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes\", \"0xdf3234\");\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes32[]\", [\"0xdf3234\", \"0xfdfd\"]);\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000\n *\n *  const res = web3.eth.abi.encodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    {\n *      propertyOne: 42,\n *      propertyTwo: 56,\n *      childStruct: {\n *        propertyOne: 45,\n *        propertyTwo: 78,\n *      },\n *    }\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\n * ```\n */\nconst encodeParameter = (abi, param) => (0, encode_js_1.encodeParameters)([abi], [param]);\nexports.encodeParameter = encodeParameter;\n/**\n * Should be used to decode list of params\n */\nconst decodeParametersWith = (abis, bytes, loose) => {\n    try {\n        if (abis.length > 0 && (!bytes || bytes === '0x' || bytes === '0X')) {\n            throw new web3_errors_1.AbiError(\"Returned values aren't valid, did it run Out of Gas? \" +\n                'You might also see this error if you are not using the ' +\n                'correct ABI for the contract you are retrieving data from, ' +\n                'requesting data from a block number that does not exist, ' +\n                'or querying a node which is not fully synced.');\n        }\n        return (0, decode_js_1.decodeParameters)(abis, `0x${bytes.replace(/0x/i, '')}`, loose);\n    }\n    catch (err) {\n        throw new web3_errors_1.AbiError(`Parameter decoding error: ${err.message}`, {\n            internalErr: err,\n        });\n    }\n};\nexports.decodeParametersWith = decodeParametersWith;\n/**\n * Should be used to decode list of params\n */\n/**\n * Decodes ABI encoded parameters to its JavaScript types.\n * @param abi -  An array of {@link AbiInput}. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The result object containing the decoded parameters.\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeParameters(\n *    [\"string\", \"uint256\"],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *  console.log(res);\n *  > { '0': 'Hello!%!', '1': 234n, __length__: 2 }\n *\n * let res = web3.eth.abi.decodeParameters(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *      },\n *    ],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n * console.log(res);\n *  > {\n *  '0': 'Hello!%!',\n *  '1': 234n,\n *  __length__: 2,\n *  myString: 'Hello!%!',\n *  myNumber: 234n\n * }\n *\n * const res = web3.eth.abi.decodeParameters(\n *    [\n *      \"uint8[]\",\n *      {\n *        ParentStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *          childStruct: {\n *            propertyOne: \"uint256\",\n *            propertyTwo: \"uint256\",\n *          },\n *        },\n *      },\n *    ],\n *    \"0x00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000018\"\n *  );\n *  console.log(res);\n *  >\n *  '0': [ 42n, 24n ],\n *  '1': {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  },\n *  __length__: 2,\n *  ParentStruct: {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  }\n *}\n * ```\n */\nconst decodeParameters = (abi, bytes) => (0, exports.decodeParametersWith)(abi, bytes, false);\nexports.decodeParameters = decodeParameters;\n/**\n * Should be used to decode bytes to plain param\n */\n/**\n * Decodes an ABI encoded parameter to its JavaScript type.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The decoded parameter\n * @example\n * ```ts\n *   const res = web3.eth.abi.decodeParameter(\n *    \"uint256\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000010\"\n *  );\n *  console.log(res);\n * > 16n\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    \"string\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *\n *  console.log(res);\n *  > Hello!%!\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    \"0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\"\n *  );\n *\n *  console.log(res);\n *   {\n *  '0': 42n,\n *  '1': 56n,\n *  '2': {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  },\n *  __length__: 3,\n *  propertyOne: 42n,\n *  propertyTwo: 56n,\n *  childStruct: {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  }\n *}\n * ```\n */\nconst decodeParameter = (abi, bytes) => (0, exports.decodeParameters)([abi], bytes)['0'];\nexports.decodeParameter = decodeParameter;\n//# sourceMappingURL=parameters_api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/parameters_api.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/address.js":
/*!*************************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/address.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeAddress = exports.encodeAddress = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst web3_validator_1 = __webpack_require__(/*! web3-validator */ \"(api)/./src/pages/api/node_modules/web3-validator/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nconst ADDRESS_BYTES_COUNT = 20;\nconst ADDRESS_OFFSET = utils_js_1.WORD_SIZE - ADDRESS_BYTES_COUNT;\nfunction encodeAddress(param, input) {\n    if (typeof input !== 'string') {\n        throw new web3_errors_1.AbiError('address type expects string as input type', {\n            value: input,\n            name: param.name,\n            type: param.type,\n        });\n    }\n    let address = input.toLowerCase();\n    if (!address.startsWith('0x')) {\n        address = `0x${address}`;\n    }\n    if (!(0, web3_validator_1.isAddress)(address)) {\n        throw new web3_errors_1.AbiError('provided input is not valid address', {\n            value: input,\n            name: param.name,\n            type: param.type,\n        });\n    }\n    // for better performance, we could convert hex to destination bytes directly (encoded var)\n    const addressBytes = web3_validator_1.utils.hexToUint8Array(address);\n    // expand address to WORD_SIZE\n    const encoded = (0, utils_js_1.alloc)(utils_js_1.WORD_SIZE);\n    encoded.set(addressBytes, ADDRESS_OFFSET);\n    return {\n        dynamic: false,\n        encoded,\n    };\n}\nexports.encodeAddress = encodeAddress;\nfunction decodeAddress(_param, bytes) {\n    const addressBytes = bytes.subarray(ADDRESS_OFFSET, utils_js_1.WORD_SIZE);\n    if (addressBytes.length !== ADDRESS_BYTES_COUNT) {\n        throw new web3_errors_1.AbiError('Invalid decoding input, not enough bytes to decode address', { bytes });\n    }\n    const result = web3_validator_1.utils.uint8ArrayToHexString(addressBytes);\n    // should we check is decoded value is valid address?\n    // if(!isAddress(result)) {\n    //     throw new AbiError(\"encoded data is not valid address\", {\n    //         address: result,\n    //     });\n    // }\n    return {\n        result: (0, web3_utils_1.toChecksumAddress)(result),\n        encoded: bytes.subarray(utils_js_1.WORD_SIZE),\n        consumed: utils_js_1.WORD_SIZE,\n    };\n}\nexports.decodeAddress = decodeAddress;\n//# sourceMappingURL=address.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL2FkZHJlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcscUJBQXFCO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBYTtBQUMzQyxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBWTtBQUN6Qyx5QkFBeUIsbUJBQU8sQ0FBQywrRkFBZ0I7QUFDakQsbUJBQW1CLG1CQUFPLENBQUMsaUdBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsUUFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSx5R0FBeUcsT0FBTztBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pc3N1ZXJfaG9sZGVyX3ZlcmlmaWVyLy4vc3JjL3BhZ2VzL2FwaS9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9jb21tb25qcy9jb2RlcnMvYmFzZS9hZGRyZXNzLmpzPzdmMDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZUFkZHJlc3MgPSBleHBvcnRzLmVuY29kZUFkZHJlc3MgPSB2b2lkIDA7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmNvbnN0IHdlYjNfZXJyb3JzXzEgPSByZXF1aXJlKFwid2ViMy1lcnJvcnNcIik7XG5jb25zdCB3ZWIzX3V0aWxzXzEgPSByZXF1aXJlKFwid2ViMy11dGlsc1wiKTtcbmNvbnN0IHdlYjNfdmFsaWRhdG9yXzEgPSByZXF1aXJlKFwid2ViMy12YWxpZGF0b3JcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWxzLmpzXCIpO1xuY29uc3QgQUREUkVTU19CWVRFU19DT1VOVCA9IDIwO1xuY29uc3QgQUREUkVTU19PRkZTRVQgPSB1dGlsc19qc18xLldPUkRfU0laRSAtIEFERFJFU1NfQllURVNfQ09VTlQ7XG5mdW5jdGlvbiBlbmNvZGVBZGRyZXNzKHBhcmFtLCBpbnB1dCkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdhZGRyZXNzIHR5cGUgZXhwZWN0cyBzdHJpbmcgYXMgaW5wdXQgdHlwZScsIHtcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgbGV0IGFkZHJlc3MgPSBpbnB1dC50b0xvd2VyQ2FzZSgpO1xuICAgIGlmICghYWRkcmVzcy5zdGFydHNXaXRoKCcweCcpKSB7XG4gICAgICAgIGFkZHJlc3MgPSBgMHgke2FkZHJlc3N9YDtcbiAgICB9XG4gICAgaWYgKCEoMCwgd2ViM192YWxpZGF0b3JfMS5pc0FkZHJlc3MpKGFkZHJlc3MpKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdwcm92aWRlZCBpbnB1dCBpcyBub3QgdmFsaWQgYWRkcmVzcycsIHtcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gZm9yIGJldHRlciBwZXJmb3JtYW5jZSwgd2UgY291bGQgY29udmVydCBoZXggdG8gZGVzdGluYXRpb24gYnl0ZXMgZGlyZWN0bHkgKGVuY29kZWQgdmFyKVxuICAgIGNvbnN0IGFkZHJlc3NCeXRlcyA9IHdlYjNfdmFsaWRhdG9yXzEudXRpbHMuaGV4VG9VaW50OEFycmF5KGFkZHJlc3MpO1xuICAgIC8vIGV4cGFuZCBhZGRyZXNzIHRvIFdPUkRfU0laRVxuICAgIGNvbnN0IGVuY29kZWQgPSAoMCwgdXRpbHNfanNfMS5hbGxvYykodXRpbHNfanNfMS5XT1JEX1NJWkUpO1xuICAgIGVuY29kZWQuc2V0KGFkZHJlc3NCeXRlcywgQUREUkVTU19PRkZTRVQpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGR5bmFtaWM6IGZhbHNlLFxuICAgICAgICBlbmNvZGVkLFxuICAgIH07XG59XG5leHBvcnRzLmVuY29kZUFkZHJlc3MgPSBlbmNvZGVBZGRyZXNzO1xuZnVuY3Rpb24gZGVjb2RlQWRkcmVzcyhfcGFyYW0sIGJ5dGVzKSB7XG4gICAgY29uc3QgYWRkcmVzc0J5dGVzID0gYnl0ZXMuc3ViYXJyYXkoQUREUkVTU19PRkZTRVQsIHV0aWxzX2pzXzEuV09SRF9TSVpFKTtcbiAgICBpZiAoYWRkcmVzc0J5dGVzLmxlbmd0aCAhPT0gQUREUkVTU19CWVRFU19DT1VOVCkge1xuICAgICAgICB0aHJvdyBuZXcgd2ViM19lcnJvcnNfMS5BYmlFcnJvcignSW52YWxpZCBkZWNvZGluZyBpbnB1dCwgbm90IGVub3VnaCBieXRlcyB0byBkZWNvZGUgYWRkcmVzcycsIHsgYnl0ZXMgfSk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHdlYjNfdmFsaWRhdG9yXzEudXRpbHMudWludDhBcnJheVRvSGV4U3RyaW5nKGFkZHJlc3NCeXRlcyk7XG4gICAgLy8gc2hvdWxkIHdlIGNoZWNrIGlzIGRlY29kZWQgdmFsdWUgaXMgdmFsaWQgYWRkcmVzcz9cbiAgICAvLyBpZighaXNBZGRyZXNzKHJlc3VsdCkpIHtcbiAgICAvLyAgICAgdGhyb3cgbmV3IEFiaUVycm9yKFwiZW5jb2RlZCBkYXRhIGlzIG5vdCB2YWxpZCBhZGRyZXNzXCIsIHtcbiAgICAvLyAgICAgICAgIGFkZHJlc3M6IHJlc3VsdCxcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdDogKDAsIHdlYjNfdXRpbHNfMS50b0NoZWNrc3VtQWRkcmVzcykocmVzdWx0KSxcbiAgICAgICAgZW5jb2RlZDogYnl0ZXMuc3ViYXJyYXkodXRpbHNfanNfMS5XT1JEX1NJWkUpLFxuICAgICAgICBjb25zdW1lZDogdXRpbHNfanNfMS5XT1JEX1NJWkUsXG4gICAgfTtcbn1cbmV4cG9ydHMuZGVjb2RlQWRkcmVzcyA9IGRlY29kZUFkZHJlc3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGRyZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/address.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/array.js":
/*!***********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/array.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeArray = exports.encodeArray = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\n// eslint-disable-next-line import/no-cycle\nconst index_js_1 = __webpack_require__(/*! ./index.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nconst number_js_1 = __webpack_require__(/*! ./number.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\");\nconst utils_js_2 = __webpack_require__(/*! ./utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/utils.js\");\nfunction encodeArray(param, values) {\n    if (!Array.isArray(values)) {\n        throw new web3_errors_1.AbiError('Expected value to be array', { abi: param, values });\n    }\n    const { size, param: arrayItemParam } = (0, utils_js_1.extractArrayType)(param);\n    const encodedParams = values.map(v => (0, index_js_1.encodeParamFromAbiParameter)(arrayItemParam, v));\n    const dynamic = size === -1;\n    const dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n    if (!dynamic && values.length !== size) {\n        throw new web3_errors_1.AbiError(\"Given arguments count doesn't match array length\", {\n            arrayLength: size,\n            argumentsLength: values.length,\n        });\n    }\n    if (dynamic || dynamicItems) {\n        const encodingResult = (0, utils_js_2.encodeDynamicParams)(encodedParams);\n        if (dynamic) {\n            const encodedLength = (0, index_js_1.encodeNumber)({ type: 'uint256', name: '' }, encodedParams.length).encoded;\n            return {\n                dynamic: true,\n                encoded: encodedParams.length > 0\n                    ? (0, web3_utils_1.uint8ArrayConcat)(encodedLength, encodingResult)\n                    : encodedLength,\n            };\n        }\n        return {\n            dynamic: true,\n            encoded: encodingResult,\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: (0, web3_utils_1.uint8ArrayConcat)(...encodedParams.map(p => p.encoded)),\n    };\n}\nexports.encodeArray = encodeArray;\nfunction decodeArray(param, bytes) {\n    // eslint-disable-next-line prefer-const\n    let { size, param: arrayItemParam } = (0, utils_js_1.extractArrayType)(param);\n    const dynamic = size === -1;\n    let consumed = 0;\n    const result = [];\n    let remaining = bytes;\n    // dynamic array, we need to decode length\n    if (dynamic) {\n        const lengthResult = (0, number_js_1.decodeNumber)({ type: 'uint32', name: '' }, bytes);\n        size = Number(lengthResult.result);\n        consumed = lengthResult.consumed;\n        remaining = lengthResult.encoded;\n    }\n    const hasDynamicChild = (0, utils_js_1.isDynamic)(arrayItemParam);\n    if (hasDynamicChild) {\n        // known length but dynamic child, each child is actually head element with encoded offset\n        for (let i = 0; i < size; i += 1) {\n            const offsetResult = (0, number_js_1.decodeNumber)({ type: 'uint32', name: '' }, remaining.subarray(i * utils_js_1.WORD_SIZE));\n            consumed += offsetResult.consumed;\n            const decodedChildResult = (0, index_js_1.decodeParamFromAbiParameter)(arrayItemParam, remaining.subarray(Number(offsetResult.result)));\n            consumed += decodedChildResult.consumed;\n            result.push(decodedChildResult.result);\n        }\n        return {\n            result,\n            encoded: remaining.subarray(consumed),\n            consumed,\n        };\n    }\n    for (let i = 0; i < size; i += 1) {\n        // decode static params\n        const decodedChildResult = (0, index_js_1.decodeParamFromAbiParameter)(arrayItemParam, bytes.subarray(consumed));\n        consumed += decodedChildResult.consumed;\n        result.push(decodedChildResult.result);\n    }\n    return {\n        result,\n        encoded: bytes.subarray(consumed),\n        consumed,\n    };\n}\nexports.decodeArray = decodeArray;\n//# sourceMappingURL=array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL2FycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLG1CQUFtQjtBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMseUZBQWE7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsdUZBQVk7QUFDekM7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyxxR0FBWTtBQUN2QyxtQkFBbUIsbUJBQU8sQ0FBQyxpR0FBYTtBQUN4QyxvQkFBb0IsbUJBQU8sQ0FBQyx1R0FBYTtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyxxR0FBWTtBQUN2QztBQUNBO0FBQ0EseUVBQXlFLG9CQUFvQjtBQUM3RjtBQUNBLFlBQVksOEJBQThCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLDJCQUEyQjtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQSxVQUFVLDhCQUE4QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsMEJBQTBCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFVBQVU7QUFDbEMsaUVBQWlFLDBCQUEwQjtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFVBQVU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL2lzc3Vlcl9ob2xkZXJfdmVyaWZpZXIvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL2FycmF5LmpzP2UxNGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZUFycmF5ID0gZXhwb3J0cy5lbmNvZGVBcnJheSA9IHZvaWQgMDtcbi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuY29uc3Qgd2ViM19lcnJvcnNfMSA9IHJlcXVpcmUoXCJ3ZWIzLWVycm9yc1wiKTtcbmNvbnN0IHdlYjNfdXRpbHNfMSA9IHJlcXVpcmUoXCJ3ZWIzLXV0aWxzXCIpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuY29uc3QgaW5kZXhfanNfMSA9IHJlcXVpcmUoXCIuL2luZGV4LmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy5qc1wiKTtcbmNvbnN0IG51bWJlcl9qc18xID0gcmVxdWlyZShcIi4vbnVtYmVyLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMiA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuZnVuY3Rpb24gZW5jb2RlQXJyYXkocGFyYW0sIHZhbHVlcykge1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZXMpKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdFeHBlY3RlZCB2YWx1ZSB0byBiZSBhcnJheScsIHsgYWJpOiBwYXJhbSwgdmFsdWVzIH0pO1xuICAgIH1cbiAgICBjb25zdCB7IHNpemUsIHBhcmFtOiBhcnJheUl0ZW1QYXJhbSB9ID0gKDAsIHV0aWxzX2pzXzEuZXh0cmFjdEFycmF5VHlwZSkocGFyYW0pO1xuICAgIGNvbnN0IGVuY29kZWRQYXJhbXMgPSB2YWx1ZXMubWFwKHYgPT4gKDAsIGluZGV4X2pzXzEuZW5jb2RlUGFyYW1Gcm9tQWJpUGFyYW1ldGVyKShhcnJheUl0ZW1QYXJhbSwgdikpO1xuICAgIGNvbnN0IGR5bmFtaWMgPSBzaXplID09PSAtMTtcbiAgICBjb25zdCBkeW5hbWljSXRlbXMgPSBlbmNvZGVkUGFyYW1zLmxlbmd0aCA+IDAgJiYgZW5jb2RlZFBhcmFtc1swXS5keW5hbWljO1xuICAgIGlmICghZHluYW1pYyAmJiB2YWx1ZXMubGVuZ3RoICE9PSBzaXplKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKFwiR2l2ZW4gYXJndW1lbnRzIGNvdW50IGRvZXNuJ3QgbWF0Y2ggYXJyYXkgbGVuZ3RoXCIsIHtcbiAgICAgICAgICAgIGFycmF5TGVuZ3RoOiBzaXplLFxuICAgICAgICAgICAgYXJndW1lbnRzTGVuZ3RoOiB2YWx1ZXMubGVuZ3RoLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgaWYgKGR5bmFtaWMgfHwgZHluYW1pY0l0ZW1zKSB7XG4gICAgICAgIGNvbnN0IGVuY29kaW5nUmVzdWx0ID0gKDAsIHV0aWxzX2pzXzIuZW5jb2RlRHluYW1pY1BhcmFtcykoZW5jb2RlZFBhcmFtcyk7XG4gICAgICAgIGlmIChkeW5hbWljKSB7XG4gICAgICAgICAgICBjb25zdCBlbmNvZGVkTGVuZ3RoID0gKDAsIGluZGV4X2pzXzEuZW5jb2RlTnVtYmVyKSh7IHR5cGU6ICd1aW50MjU2JywgbmFtZTogJycgfSwgZW5jb2RlZFBhcmFtcy5sZW5ndGgpLmVuY29kZWQ7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGR5bmFtaWM6IHRydWUsXG4gICAgICAgICAgICAgICAgZW5jb2RlZDogZW5jb2RlZFBhcmFtcy5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIHdlYjNfdXRpbHNfMS51aW50OEFycmF5Q29uY2F0KShlbmNvZGVkTGVuZ3RoLCBlbmNvZGluZ1Jlc3VsdClcbiAgICAgICAgICAgICAgICAgICAgOiBlbmNvZGVkTGVuZ3RoLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZHluYW1pYzogdHJ1ZSxcbiAgICAgICAgICAgIGVuY29kZWQ6IGVuY29kaW5nUmVzdWx0LFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBkeW5hbWljOiBmYWxzZSxcbiAgICAgICAgZW5jb2RlZDogKDAsIHdlYjNfdXRpbHNfMS51aW50OEFycmF5Q29uY2F0KSguLi5lbmNvZGVkUGFyYW1zLm1hcChwID0+IHAuZW5jb2RlZCkpLFxuICAgIH07XG59XG5leHBvcnRzLmVuY29kZUFycmF5ID0gZW5jb2RlQXJyYXk7XG5mdW5jdGlvbiBkZWNvZGVBcnJheShwYXJhbSwgYnl0ZXMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWNvbnN0XG4gICAgbGV0IHsgc2l6ZSwgcGFyYW06IGFycmF5SXRlbVBhcmFtIH0gPSAoMCwgdXRpbHNfanNfMS5leHRyYWN0QXJyYXlUeXBlKShwYXJhbSk7XG4gICAgY29uc3QgZHluYW1pYyA9IHNpemUgPT09IC0xO1xuICAgIGxldCBjb25zdW1lZCA9IDA7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgbGV0IHJlbWFpbmluZyA9IGJ5dGVzO1xuICAgIC8vIGR5bmFtaWMgYXJyYXksIHdlIG5lZWQgdG8gZGVjb2RlIGxlbmd0aFxuICAgIGlmIChkeW5hbWljKSB7XG4gICAgICAgIGNvbnN0IGxlbmd0aFJlc3VsdCA9ICgwLCBudW1iZXJfanNfMS5kZWNvZGVOdW1iZXIpKHsgdHlwZTogJ3VpbnQzMicsIG5hbWU6ICcnIH0sIGJ5dGVzKTtcbiAgICAgICAgc2l6ZSA9IE51bWJlcihsZW5ndGhSZXN1bHQucmVzdWx0KTtcbiAgICAgICAgY29uc3VtZWQgPSBsZW5ndGhSZXN1bHQuY29uc3VtZWQ7XG4gICAgICAgIHJlbWFpbmluZyA9IGxlbmd0aFJlc3VsdC5lbmNvZGVkO1xuICAgIH1cbiAgICBjb25zdCBoYXNEeW5hbWljQ2hpbGQgPSAoMCwgdXRpbHNfanNfMS5pc0R5bmFtaWMpKGFycmF5SXRlbVBhcmFtKTtcbiAgICBpZiAoaGFzRHluYW1pY0NoaWxkKSB7XG4gICAgICAgIC8vIGtub3duIGxlbmd0aCBidXQgZHluYW1pYyBjaGlsZCwgZWFjaCBjaGlsZCBpcyBhY3R1YWxseSBoZWFkIGVsZW1lbnQgd2l0aCBlbmNvZGVkIG9mZnNldFxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkgKz0gMSkge1xuICAgICAgICAgICAgY29uc3Qgb2Zmc2V0UmVzdWx0ID0gKDAsIG51bWJlcl9qc18xLmRlY29kZU51bWJlcikoeyB0eXBlOiAndWludDMyJywgbmFtZTogJycgfSwgcmVtYWluaW5nLnN1YmFycmF5KGkgKiB1dGlsc19qc18xLldPUkRfU0laRSkpO1xuICAgICAgICAgICAgY29uc3VtZWQgKz0gb2Zmc2V0UmVzdWx0LmNvbnN1bWVkO1xuICAgICAgICAgICAgY29uc3QgZGVjb2RlZENoaWxkUmVzdWx0ID0gKDAsIGluZGV4X2pzXzEuZGVjb2RlUGFyYW1Gcm9tQWJpUGFyYW1ldGVyKShhcnJheUl0ZW1QYXJhbSwgcmVtYWluaW5nLnN1YmFycmF5KE51bWJlcihvZmZzZXRSZXN1bHQucmVzdWx0KSkpO1xuICAgICAgICAgICAgY29uc3VtZWQgKz0gZGVjb2RlZENoaWxkUmVzdWx0LmNvbnN1bWVkO1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goZGVjb2RlZENoaWxkUmVzdWx0LnJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgIGVuY29kZWQ6IHJlbWFpbmluZy5zdWJhcnJheShjb25zdW1lZCksXG4gICAgICAgICAgICBjb25zdW1lZCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpICs9IDEpIHtcbiAgICAgICAgLy8gZGVjb2RlIHN0YXRpYyBwYXJhbXNcbiAgICAgICAgY29uc3QgZGVjb2RlZENoaWxkUmVzdWx0ID0gKDAsIGluZGV4X2pzXzEuZGVjb2RlUGFyYW1Gcm9tQWJpUGFyYW1ldGVyKShhcnJheUl0ZW1QYXJhbSwgYnl0ZXMuc3ViYXJyYXkoY29uc3VtZWQpKTtcbiAgICAgICAgY29uc3VtZWQgKz0gZGVjb2RlZENoaWxkUmVzdWx0LmNvbnN1bWVkO1xuICAgICAgICByZXN1bHQucHVzaChkZWNvZGVkQ2hpbGRSZXN1bHQucmVzdWx0KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdWx0LFxuICAgICAgICBlbmNvZGVkOiBieXRlcy5zdWJhcnJheShjb25zdW1lZCksXG4gICAgICAgIGNvbnN1bWVkLFxuICAgIH07XG59XG5leHBvcnRzLmRlY29kZUFycmF5ID0gZGVjb2RlQXJyYXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/array.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bool.js":
/*!**********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bool.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeBool = exports.encodeBoolean = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nconst number_js_1 = __webpack_require__(/*! ./number.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\");\nfunction encodeBoolean(param, input) {\n    let value;\n    try {\n        value = (0, web3_utils_1.toBool)(input);\n    }\n    catch (e) {\n        if (e instanceof web3_errors_1.InvalidBooleanError) {\n            throw new web3_errors_1.AbiError('provided input is not valid boolean value', {\n                type: param.type,\n                value: input,\n                name: param.name,\n            });\n        }\n    }\n    return (0, number_js_1.encodeNumber)({ type: 'uint8', name: '' }, Number(value));\n}\nexports.encodeBoolean = encodeBoolean;\nfunction decodeBool(_param, bytes) {\n    const numberResult = (0, number_js_1.decodeNumber)({ type: 'uint8', name: '' }, bytes);\n    if (numberResult.result > 1 || numberResult.result < 0) {\n        throw new web3_errors_1.AbiError('Invalid boolean value encoded', {\n            boolBytes: bytes.subarray(0, utils_js_1.WORD_SIZE),\n            numberResult,\n        });\n    }\n    return {\n        result: numberResult.result === BigInt(1),\n        encoded: numberResult.encoded,\n        consumed: utils_js_1.WORD_SIZE,\n    };\n}\nexports.decodeBool = decodeBool;\n//# sourceMappingURL=bool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL2Jvb2wuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcscUJBQXFCO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBYTtBQUMzQyxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBWTtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyxpR0FBYTtBQUN4QyxvQkFBb0IsbUJBQU8sQ0FBQyx1R0FBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSwyQ0FBMkMseUJBQXlCO0FBQ3BFO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EseURBQXlELHlCQUF5QjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2lzc3Vlcl9ob2xkZXJfdmVyaWZpZXIvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL2Jvb2wuanM/ZDlkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlQm9vbCA9IGV4cG9ydHMuZW5jb2RlQm9vbGVhbiA9IHZvaWQgMDtcbi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuY29uc3Qgd2ViM19lcnJvcnNfMSA9IHJlcXVpcmUoXCJ3ZWIzLWVycm9yc1wiKTtcbmNvbnN0IHdlYjNfdXRpbHNfMSA9IHJlcXVpcmUoXCJ3ZWIzLXV0aWxzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy5qc1wiKTtcbmNvbnN0IG51bWJlcl9qc18xID0gcmVxdWlyZShcIi4vbnVtYmVyLmpzXCIpO1xuZnVuY3Rpb24gZW5jb2RlQm9vbGVhbihwYXJhbSwgaW5wdXQpIHtcbiAgICBsZXQgdmFsdWU7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFsdWUgPSAoMCwgd2ViM191dGlsc18xLnRvQm9vbCkoaW5wdXQpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIHdlYjNfZXJyb3JzXzEuSW52YWxpZEJvb2xlYW5FcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ3Byb3ZpZGVkIGlucHV0IGlzIG5vdCB2YWxpZCBib29sZWFuIHZhbHVlJywge1xuICAgICAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGlucHV0LFxuICAgICAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKDAsIG51bWJlcl9qc18xLmVuY29kZU51bWJlcikoeyB0eXBlOiAndWludDgnLCBuYW1lOiAnJyB9LCBOdW1iZXIodmFsdWUpKTtcbn1cbmV4cG9ydHMuZW5jb2RlQm9vbGVhbiA9IGVuY29kZUJvb2xlYW47XG5mdW5jdGlvbiBkZWNvZGVCb29sKF9wYXJhbSwgYnl0ZXMpIHtcbiAgICBjb25zdCBudW1iZXJSZXN1bHQgPSAoMCwgbnVtYmVyX2pzXzEuZGVjb2RlTnVtYmVyKSh7IHR5cGU6ICd1aW50OCcsIG5hbWU6ICcnIH0sIGJ5dGVzKTtcbiAgICBpZiAobnVtYmVyUmVzdWx0LnJlc3VsdCA+IDEgfHwgbnVtYmVyUmVzdWx0LnJlc3VsdCA8IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ0ludmFsaWQgYm9vbGVhbiB2YWx1ZSBlbmNvZGVkJywge1xuICAgICAgICAgICAgYm9vbEJ5dGVzOiBieXRlcy5zdWJhcnJheSgwLCB1dGlsc19qc18xLldPUkRfU0laRSksXG4gICAgICAgICAgICBudW1iZXJSZXN1bHQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICByZXN1bHQ6IG51bWJlclJlc3VsdC5yZXN1bHQgPT09IEJpZ0ludCgxKSxcbiAgICAgICAgZW5jb2RlZDogbnVtYmVyUmVzdWx0LmVuY29kZWQsXG4gICAgICAgIGNvbnN1bWVkOiB1dGlsc19qc18xLldPUkRfU0laRSxcbiAgICB9O1xufVxuZXhwb3J0cy5kZWNvZGVCb29sID0gZGVjb2RlQm9vbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJvb2wuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bool.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bytes.js":
/*!***********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bytes.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeBytes = exports.encodeBytes = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst web3_validator_1 = __webpack_require__(/*! web3-validator */ \"(api)/./src/pages/api/node_modules/web3-validator/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nconst number_js_1 = __webpack_require__(/*! ./number.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\");\nconst MAX_STATIC_BYTES_COUNT = 32;\nfunction encodeBytes(param, input) {\n    // hack for odd length hex strings\n    if (typeof input === 'string' && input.length % 2 !== 0) {\n        // eslint-disable-next-line no-param-reassign\n        input += '0';\n    }\n    if (!(0, web3_validator_1.isBytes)(input)) {\n        throw new web3_errors_1.AbiError('provided input is not valid bytes value', {\n            type: param.type,\n            value: input,\n            name: param.name,\n        });\n    }\n    const bytes = (0, web3_utils_1.bytesToUint8Array)(input);\n    const [, size] = param.type.split('bytes');\n    // fixed size\n    if (size) {\n        if (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {\n            throw new web3_errors_1.AbiError('invalid bytes type. Static byte type can have between 1 and 32 bytes', {\n                type: param.type,\n            });\n        }\n        if (Number(size) < bytes.length) {\n            throw new web3_errors_1.AbiError('provided input size is different than type size', {\n                type: param.type,\n                value: input,\n                name: param.name,\n            });\n        }\n        const encoded = (0, utils_js_1.alloc)(utils_js_1.WORD_SIZE);\n        encoded.set(bytes);\n        return {\n            dynamic: false,\n            encoded,\n        };\n    }\n    const partsLength = Math.ceil(bytes.length / utils_js_1.WORD_SIZE);\n    // one word for length of data + WORD for each part of actual data\n    const encoded = (0, utils_js_1.alloc)(utils_js_1.WORD_SIZE + partsLength * utils_js_1.WORD_SIZE);\n    encoded.set((0, number_js_1.encodeNumber)({ type: 'uint32', name: '' }, bytes.length).encoded);\n    encoded.set(bytes, utils_js_1.WORD_SIZE);\n    return {\n        dynamic: true,\n        encoded,\n    };\n}\nexports.encodeBytes = encodeBytes;\nfunction decodeBytes(param, bytes) {\n    const [, sizeString] = param.type.split('bytes');\n    let size = Number(sizeString);\n    let remainingBytes = bytes;\n    let partsCount = 1;\n    let consumed = 0;\n    if (!size) {\n        // dynamic bytes\n        const result = (0, number_js_1.decodeNumber)({ type: 'uint32', name: '' }, remainingBytes);\n        size = Number(result.result);\n        consumed += result.consumed;\n        remainingBytes = result.encoded;\n        partsCount = Math.ceil(size / utils_js_1.WORD_SIZE);\n    }\n    if (size > bytes.length) {\n        throw new web3_errors_1.AbiError('there is not enough data to decode', {\n            type: param.type,\n            encoded: bytes,\n            size,\n        });\n    }\n    return {\n        result: (0, web3_utils_1.bytesToHex)(remainingBytes.subarray(0, size)),\n        encoded: remainingBytes.subarray(partsCount * utils_js_1.WORD_SIZE),\n        consumed: consumed + partsCount * utils_js_1.WORD_SIZE,\n    };\n}\nexports.decodeBytes = decodeBytes;\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL2J5dGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLG1CQUFtQjtBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMseUZBQWE7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsdUZBQVk7QUFDekMseUJBQXlCLG1CQUFPLENBQUMsK0ZBQWdCO0FBQ2pELG1CQUFtQixtQkFBTyxDQUFDLGlHQUFhO0FBQ3hDLG9CQUFvQixtQkFBTyxDQUFDLHVHQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELDBCQUEwQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCwwQkFBMEI7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pc3N1ZXJfaG9sZGVyX3ZlcmlmaWVyLy4vc3JjL3BhZ2VzL2FwaS9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9jb21tb25qcy9jb2RlcnMvYmFzZS9ieXRlcy5qcz8xMmNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVCeXRlcyA9IGV4cG9ydHMuZW5jb2RlQnl0ZXMgPSB2b2lkIDA7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmNvbnN0IHdlYjNfZXJyb3JzXzEgPSByZXF1aXJlKFwid2ViMy1lcnJvcnNcIik7XG5jb25zdCB3ZWIzX3V0aWxzXzEgPSByZXF1aXJlKFwid2ViMy11dGlsc1wiKTtcbmNvbnN0IHdlYjNfdmFsaWRhdG9yXzEgPSByZXF1aXJlKFwid2ViMy12YWxpZGF0b3JcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWxzLmpzXCIpO1xuY29uc3QgbnVtYmVyX2pzXzEgPSByZXF1aXJlKFwiLi9udW1iZXIuanNcIik7XG5jb25zdCBNQVhfU1RBVElDX0JZVEVTX0NPVU5UID0gMzI7XG5mdW5jdGlvbiBlbmNvZGVCeXRlcyhwYXJhbSwgaW5wdXQpIHtcbiAgICAvLyBoYWNrIGZvciBvZGQgbGVuZ3RoIGhleCBzdHJpbmdzXG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycgJiYgaW5wdXQubGVuZ3RoICUgMiAhPT0gMCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgaW5wdXQgKz0gJzAnO1xuICAgIH1cbiAgICBpZiAoISgwLCB3ZWIzX3ZhbGlkYXRvcl8xLmlzQnl0ZXMpKGlucHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgd2ViM19lcnJvcnNfMS5BYmlFcnJvcigncHJvdmlkZWQgaW5wdXQgaXMgbm90IHZhbGlkIGJ5dGVzIHZhbHVlJywge1xuICAgICAgICAgICAgdHlwZTogcGFyYW0udHlwZSxcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBieXRlcyA9ICgwLCB3ZWIzX3V0aWxzXzEuYnl0ZXNUb1VpbnQ4QXJyYXkpKGlucHV0KTtcbiAgICBjb25zdCBbLCBzaXplXSA9IHBhcmFtLnR5cGUuc3BsaXQoJ2J5dGVzJyk7XG4gICAgLy8gZml4ZWQgc2l6ZVxuICAgIGlmIChzaXplKSB7XG4gICAgICAgIGlmIChOdW1iZXIoc2l6ZSkgPiBNQVhfU1RBVElDX0JZVEVTX0NPVU5UIHx8IE51bWJlcihzaXplKSA8IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdpbnZhbGlkIGJ5dGVzIHR5cGUuIFN0YXRpYyBieXRlIHR5cGUgY2FuIGhhdmUgYmV0d2VlbiAxIGFuZCAzMiBieXRlcycsIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE51bWJlcihzaXplKSA8IGJ5dGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ3Byb3ZpZGVkIGlucHV0IHNpemUgaXMgZGlmZmVyZW50IHRoYW4gdHlwZSBzaXplJywge1xuICAgICAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGlucHV0LFxuICAgICAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbmNvZGVkID0gKDAsIHV0aWxzX2pzXzEuYWxsb2MpKHV0aWxzX2pzXzEuV09SRF9TSVpFKTtcbiAgICAgICAgZW5jb2RlZC5zZXQoYnl0ZXMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZHluYW1pYzogZmFsc2UsXG4gICAgICAgICAgICBlbmNvZGVkLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBwYXJ0c0xlbmd0aCA9IE1hdGguY2VpbChieXRlcy5sZW5ndGggLyB1dGlsc19qc18xLldPUkRfU0laRSk7XG4gICAgLy8gb25lIHdvcmQgZm9yIGxlbmd0aCBvZiBkYXRhICsgV09SRCBmb3IgZWFjaCBwYXJ0IG9mIGFjdHVhbCBkYXRhXG4gICAgY29uc3QgZW5jb2RlZCA9ICgwLCB1dGlsc19qc18xLmFsbG9jKSh1dGlsc19qc18xLldPUkRfU0laRSArIHBhcnRzTGVuZ3RoICogdXRpbHNfanNfMS5XT1JEX1NJWkUpO1xuICAgIGVuY29kZWQuc2V0KCgwLCBudW1iZXJfanNfMS5lbmNvZGVOdW1iZXIpKHsgdHlwZTogJ3VpbnQzMicsIG5hbWU6ICcnIH0sIGJ5dGVzLmxlbmd0aCkuZW5jb2RlZCk7XG4gICAgZW5jb2RlZC5zZXQoYnl0ZXMsIHV0aWxzX2pzXzEuV09SRF9TSVpFKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBkeW5hbWljOiB0cnVlLFxuICAgICAgICBlbmNvZGVkLFxuICAgIH07XG59XG5leHBvcnRzLmVuY29kZUJ5dGVzID0gZW5jb2RlQnl0ZXM7XG5mdW5jdGlvbiBkZWNvZGVCeXRlcyhwYXJhbSwgYnl0ZXMpIHtcbiAgICBjb25zdCBbLCBzaXplU3RyaW5nXSA9IHBhcmFtLnR5cGUuc3BsaXQoJ2J5dGVzJyk7XG4gICAgbGV0IHNpemUgPSBOdW1iZXIoc2l6ZVN0cmluZyk7XG4gICAgbGV0IHJlbWFpbmluZ0J5dGVzID0gYnl0ZXM7XG4gICAgbGV0IHBhcnRzQ291bnQgPSAxO1xuICAgIGxldCBjb25zdW1lZCA9IDA7XG4gICAgaWYgKCFzaXplKSB7XG4gICAgICAgIC8vIGR5bmFtaWMgYnl0ZXNcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gKDAsIG51bWJlcl9qc18xLmRlY29kZU51bWJlcikoeyB0eXBlOiAndWludDMyJywgbmFtZTogJycgfSwgcmVtYWluaW5nQnl0ZXMpO1xuICAgICAgICBzaXplID0gTnVtYmVyKHJlc3VsdC5yZXN1bHQpO1xuICAgICAgICBjb25zdW1lZCArPSByZXN1bHQuY29uc3VtZWQ7XG4gICAgICAgIHJlbWFpbmluZ0J5dGVzID0gcmVzdWx0LmVuY29kZWQ7XG4gICAgICAgIHBhcnRzQ291bnQgPSBNYXRoLmNlaWwoc2l6ZSAvIHV0aWxzX2pzXzEuV09SRF9TSVpFKTtcbiAgICB9XG4gICAgaWYgKHNpemUgPiBieXRlcy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ3RoZXJlIGlzIG5vdCBlbm91Z2ggZGF0YSB0byBkZWNvZGUnLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICAgICAgZW5jb2RlZDogYnl0ZXMsXG4gICAgICAgICAgICBzaXplLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdWx0OiAoMCwgd2ViM191dGlsc18xLmJ5dGVzVG9IZXgpKHJlbWFpbmluZ0J5dGVzLnN1YmFycmF5KDAsIHNpemUpKSxcbiAgICAgICAgZW5jb2RlZDogcmVtYWluaW5nQnl0ZXMuc3ViYXJyYXkocGFydHNDb3VudCAqIHV0aWxzX2pzXzEuV09SRF9TSVpFKSxcbiAgICAgICAgY29uc3VtZWQ6IGNvbnN1bWVkICsgcGFydHNDb3VudCAqIHV0aWxzX2pzXzEuV09SRF9TSVpFLFxuICAgIH07XG59XG5leHBvcnRzLmRlY29kZUJ5dGVzID0gZGVjb2RlQnl0ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bytes.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/index.js":
/*!***********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeParamFromAbiParameter = exports.encodeParamFromAbiParameter = exports.decodeArray = exports.encodeArray = exports.decodeTuple = exports.encodeTuple = exports.decodeString = exports.encodeString = exports.decodeNumber = exports.encodeNumber = exports.decodeBytes = exports.encodeBytes = exports.decodeBool = exports.encodeBoolean = exports.decodeAddress = exports.encodeAddress = void 0;\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst address_js_1 = __webpack_require__(/*! ./address.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/address.js\");\nconst bool_js_1 = __webpack_require__(/*! ./bool.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bool.js\");\nconst bytes_js_1 = __webpack_require__(/*! ./bytes.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bytes.js\");\nconst number_js_1 = __webpack_require__(/*! ./number.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\");\nconst string_js_1 = __webpack_require__(/*! ./string.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/string.js\");\n// eslint-disable-next-line import/no-cycle\nconst tuple_js_1 = __webpack_require__(/*! ./tuple.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/tuple.js\");\n// eslint-disable-next-line import/no-cycle\nconst array_js_1 = __webpack_require__(/*! ./array.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/array.js\");\nvar address_js_2 = __webpack_require__(/*! ./address.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/address.js\");\nObject.defineProperty(exports, \"encodeAddress\", ({ enumerable: true, get: function () { return address_js_2.encodeAddress; } }));\nObject.defineProperty(exports, \"decodeAddress\", ({ enumerable: true, get: function () { return address_js_2.decodeAddress; } }));\nvar bool_js_2 = __webpack_require__(/*! ./bool.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bool.js\");\nObject.defineProperty(exports, \"encodeBoolean\", ({ enumerable: true, get: function () { return bool_js_2.encodeBoolean; } }));\nObject.defineProperty(exports, \"decodeBool\", ({ enumerable: true, get: function () { return bool_js_2.decodeBool; } }));\nvar bytes_js_2 = __webpack_require__(/*! ./bytes.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bytes.js\");\nObject.defineProperty(exports, \"encodeBytes\", ({ enumerable: true, get: function () { return bytes_js_2.encodeBytes; } }));\nObject.defineProperty(exports, \"decodeBytes\", ({ enumerable: true, get: function () { return bytes_js_2.decodeBytes; } }));\nvar number_js_2 = __webpack_require__(/*! ./number.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\");\nObject.defineProperty(exports, \"encodeNumber\", ({ enumerable: true, get: function () { return number_js_2.encodeNumber; } }));\nObject.defineProperty(exports, \"decodeNumber\", ({ enumerable: true, get: function () { return number_js_2.decodeNumber; } }));\nvar string_js_2 = __webpack_require__(/*! ./string.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/string.js\");\nObject.defineProperty(exports, \"encodeString\", ({ enumerable: true, get: function () { return string_js_2.encodeString; } }));\nObject.defineProperty(exports, \"decodeString\", ({ enumerable: true, get: function () { return string_js_2.decodeString; } }));\n// eslint-disable-next-line import/no-cycle\nvar tuple_js_2 = __webpack_require__(/*! ./tuple.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/tuple.js\");\nObject.defineProperty(exports, \"encodeTuple\", ({ enumerable: true, get: function () { return tuple_js_2.encodeTuple; } }));\nObject.defineProperty(exports, \"decodeTuple\", ({ enumerable: true, get: function () { return tuple_js_2.decodeTuple; } }));\n// eslint-disable-next-line import/no-cycle\nvar array_js_2 = __webpack_require__(/*! ./array.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/array.js\");\nObject.defineProperty(exports, \"encodeArray\", ({ enumerable: true, get: function () { return array_js_2.encodeArray; } }));\nObject.defineProperty(exports, \"decodeArray\", ({ enumerable: true, get: function () { return array_js_2.decodeArray; } }));\nfunction encodeParamFromAbiParameter(param, value) {\n    if (param.type === 'string') {\n        return (0, string_js_1.encodeString)(param, value);\n    }\n    if (param.type === 'bool') {\n        return (0, bool_js_1.encodeBoolean)(param, value);\n    }\n    if (param.type === 'address') {\n        return (0, address_js_1.encodeAddress)(param, value);\n    }\n    if (param.type === 'tuple') {\n        return (0, tuple_js_1.encodeTuple)(param, value);\n    }\n    if (param.type.endsWith(']')) {\n        return (0, array_js_1.encodeArray)(param, value);\n    }\n    if (param.type.startsWith('bytes')) {\n        return (0, bytes_js_1.encodeBytes)(param, value);\n    }\n    if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n        return (0, number_js_1.encodeNumber)(param, value);\n    }\n    throw new web3_errors_1.AbiError('Unsupported', {\n        param,\n        value,\n    });\n}\nexports.encodeParamFromAbiParameter = encodeParamFromAbiParameter;\nfunction decodeParamFromAbiParameter(param, bytes) {\n    if (param.type === 'string') {\n        return (0, string_js_1.decodeString)(param, bytes);\n    }\n    if (param.type === 'bool') {\n        return (0, bool_js_1.decodeBool)(param, bytes);\n    }\n    if (param.type === 'address') {\n        return (0, address_js_1.decodeAddress)(param, bytes);\n    }\n    if (param.type === 'tuple') {\n        return (0, tuple_js_1.decodeTuple)(param, bytes);\n    }\n    if (param.type.endsWith(']')) {\n        return (0, array_js_1.decodeArray)(param, bytes);\n    }\n    if (param.type.startsWith('bytes')) {\n        return (0, bytes_js_1.decodeBytes)(param, bytes);\n    }\n    if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n        return (0, number_js_1.decodeNumber)(param, bytes);\n    }\n    throw new web3_errors_1.AbiError('Unsupported', {\n        param,\n        bytes,\n    });\n}\nexports.decodeParamFromAbiParameter = decodeParamFromAbiParameter;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/index.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js":
/*!************************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeNumber = exports.encodeNumber = void 0;\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst web3_validator_1 = __webpack_require__(/*! web3-validator */ \"(api)/./src/pages/api/node_modules/web3-validator/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nconst numbersLimits_js_1 = __webpack_require__(/*! ./numbersLimits.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/numbersLimits.js\");\n// eslint-disable-next-line no-bitwise\nconst mask = BigInt(1) << BigInt(256);\nfunction bigIntToUint8Array(value, byteLength = utils_js_1.WORD_SIZE) {\n    let hexValue;\n    if (value < 0) {\n        hexValue = (mask + value).toString(16);\n    }\n    else {\n        hexValue = value.toString(16);\n    }\n    hexValue = (0, web3_utils_1.padLeft)(hexValue, byteLength * 2);\n    return web3_validator_1.utils.hexToUint8Array(hexValue);\n}\nfunction uint8ArrayToBigInt(value, max) {\n    const hexValue = web3_validator_1.utils.uint8ArrayToHexString(value);\n    const result = BigInt(hexValue);\n    if (result <= max)\n        return result;\n    return result - mask;\n}\nfunction encodeNumber(param, input) {\n    let value;\n    try {\n        value = (0, web3_utils_1.toBigInt)(input);\n    }\n    catch (e) {\n        throw new web3_errors_1.AbiError('provided input is not number value', {\n            type: param.type,\n            value: input,\n            name: param.name,\n        });\n    }\n    const limit = numbersLimits_js_1.numberLimits.get(param.type);\n    if (!limit) {\n        throw new web3_errors_1.AbiError('provided abi contains invalid number datatype', { type: param.type });\n    }\n    if (value < limit.min) {\n        throw new web3_errors_1.AbiError('provided input is less then minimum for given type', {\n            type: param.type,\n            value: input,\n            name: param.name,\n            minimum: limit.min.toString(),\n        });\n    }\n    if (value > limit.max) {\n        throw new web3_errors_1.AbiError('provided input is greater then maximum for given type', {\n            type: param.type,\n            value: input,\n            name: param.name,\n            maximum: limit.max.toString(),\n        });\n    }\n    return {\n        dynamic: false,\n        encoded: bigIntToUint8Array(value),\n    };\n}\nexports.encodeNumber = encodeNumber;\nfunction decodeNumber(param, bytes) {\n    if (bytes.length < utils_js_1.WORD_SIZE) {\n        throw new web3_errors_1.AbiError('Not enough bytes left to decode', { param, bytesLeft: bytes.length });\n    }\n    const boolBytes = bytes.subarray(0, utils_js_1.WORD_SIZE);\n    const limit = numbersLimits_js_1.numberLimits.get(param.type);\n    if (!limit) {\n        throw new web3_errors_1.AbiError('provided abi contains invalid number datatype', { type: param.type });\n    }\n    const numberResult = uint8ArrayToBigInt(boolBytes, limit.max);\n    if (numberResult < limit.min) {\n        throw new web3_errors_1.AbiError('decoded value is less then minimum for given type', {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            minimum: limit.min.toString(),\n        });\n    }\n    if (numberResult > limit.max) {\n        throw new web3_errors_1.AbiError('decoded value is greater then maximum for given type', {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            maximum: limit.max.toString(),\n        });\n    }\n    return {\n        result: numberResult,\n        encoded: bytes.subarray(utils_js_1.WORD_SIZE),\n        consumed: utils_js_1.WORD_SIZE,\n    };\n}\nexports.decodeNumber = decodeNumber;\n//# sourceMappingURL=number.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL251bWJlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsb0JBQW9CO0FBQzNDLHNCQUFzQixtQkFBTyxDQUFDLHlGQUFhO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLHVGQUFZO0FBQ3pDLHlCQUF5QixtQkFBTyxDQUFDLCtGQUFnQjtBQUNqRCxtQkFBbUIsbUJBQU8sQ0FBQyxpR0FBYTtBQUN4QywyQkFBMkIsbUJBQU8sQ0FBQyxxSEFBb0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDRGQUE0RixrQkFBa0I7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQSw4RUFBOEUsZ0NBQWdDO0FBQzlHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEZBQTRGLGtCQUFrQjtBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXNzdWVyX2hvbGRlcl92ZXJpZmllci8uL3NyYy9wYWdlcy9hcGkvbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvY29tbW9uanMvY29kZXJzL2Jhc2UvbnVtYmVyLmpzPzZjZDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlTnVtYmVyID0gZXhwb3J0cy5lbmNvZGVOdW1iZXIgPSB2b2lkIDA7XG5jb25zdCB3ZWIzX2Vycm9yc18xID0gcmVxdWlyZShcIndlYjMtZXJyb3JzXCIpO1xuY29uc3Qgd2ViM191dGlsc18xID0gcmVxdWlyZShcIndlYjMtdXRpbHNcIik7XG5jb25zdCB3ZWIzX3ZhbGlkYXRvcl8xID0gcmVxdWlyZShcIndlYjMtdmFsaWRhdG9yXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy5qc1wiKTtcbmNvbnN0IG51bWJlcnNMaW1pdHNfanNfMSA9IHJlcXVpcmUoXCIuL251bWJlcnNMaW1pdHMuanNcIik7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYml0d2lzZVxuY29uc3QgbWFzayA9IEJpZ0ludCgxKSA8PCBCaWdJbnQoMjU2KTtcbmZ1bmN0aW9uIGJpZ0ludFRvVWludDhBcnJheSh2YWx1ZSwgYnl0ZUxlbmd0aCA9IHV0aWxzX2pzXzEuV09SRF9TSVpFKSB7XG4gICAgbGV0IGhleFZhbHVlO1xuICAgIGlmICh2YWx1ZSA8IDApIHtcbiAgICAgICAgaGV4VmFsdWUgPSAobWFzayArIHZhbHVlKS50b1N0cmluZygxNik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBoZXhWYWx1ZSA9IHZhbHVlLnRvU3RyaW5nKDE2KTtcbiAgICB9XG4gICAgaGV4VmFsdWUgPSAoMCwgd2ViM191dGlsc18xLnBhZExlZnQpKGhleFZhbHVlLCBieXRlTGVuZ3RoICogMik7XG4gICAgcmV0dXJuIHdlYjNfdmFsaWRhdG9yXzEudXRpbHMuaGV4VG9VaW50OEFycmF5KGhleFZhbHVlKTtcbn1cbmZ1bmN0aW9uIHVpbnQ4QXJyYXlUb0JpZ0ludCh2YWx1ZSwgbWF4KSB7XG4gICAgY29uc3QgaGV4VmFsdWUgPSB3ZWIzX3ZhbGlkYXRvcl8xLnV0aWxzLnVpbnQ4QXJyYXlUb0hleFN0cmluZyh2YWx1ZSk7XG4gICAgY29uc3QgcmVzdWx0ID0gQmlnSW50KGhleFZhbHVlKTtcbiAgICBpZiAocmVzdWx0IDw9IG1heClcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICByZXR1cm4gcmVzdWx0IC0gbWFzaztcbn1cbmZ1bmN0aW9uIGVuY29kZU51bWJlcihwYXJhbSwgaW5wdXQpIHtcbiAgICBsZXQgdmFsdWU7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFsdWUgPSAoMCwgd2ViM191dGlsc18xLnRvQmlnSW50KShpbnB1dCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdwcm92aWRlZCBpbnB1dCBpcyBub3QgbnVtYmVyIHZhbHVlJywge1xuICAgICAgICAgICAgdHlwZTogcGFyYW0udHlwZSxcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBsaW1pdCA9IG51bWJlcnNMaW1pdHNfanNfMS5udW1iZXJMaW1pdHMuZ2V0KHBhcmFtLnR5cGUpO1xuICAgIGlmICghbGltaXQpIHtcbiAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ3Byb3ZpZGVkIGFiaSBjb250YWlucyBpbnZhbGlkIG51bWJlciBkYXRhdHlwZScsIHsgdHlwZTogcGFyYW0udHlwZSB9KTtcbiAgICB9XG4gICAgaWYgKHZhbHVlIDwgbGltaXQubWluKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdwcm92aWRlZCBpbnB1dCBpcyBsZXNzIHRoZW4gbWluaW11bSBmb3IgZ2l2ZW4gdHlwZScsIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICB2YWx1ZTogaW5wdXQsXG4gICAgICAgICAgICBuYW1lOiBwYXJhbS5uYW1lLFxuICAgICAgICAgICAgbWluaW11bTogbGltaXQubWluLnRvU3RyaW5nKCksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPiBsaW1pdC5tYXgpIHtcbiAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ3Byb3ZpZGVkIGlucHV0IGlzIGdyZWF0ZXIgdGhlbiBtYXhpbXVtIGZvciBnaXZlbiB0eXBlJywge1xuICAgICAgICAgICAgdHlwZTogcGFyYW0udHlwZSxcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICBtYXhpbXVtOiBsaW1pdC5tYXgudG9TdHJpbmcoKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGR5bmFtaWM6IGZhbHNlLFxuICAgICAgICBlbmNvZGVkOiBiaWdJbnRUb1VpbnQ4QXJyYXkodmFsdWUpLFxuICAgIH07XG59XG5leHBvcnRzLmVuY29kZU51bWJlciA9IGVuY29kZU51bWJlcjtcbmZ1bmN0aW9uIGRlY29kZU51bWJlcihwYXJhbSwgYnl0ZXMpIHtcbiAgICBpZiAoYnl0ZXMubGVuZ3RoIDwgdXRpbHNfanNfMS5XT1JEX1NJWkUpIHtcbiAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ05vdCBlbm91Z2ggYnl0ZXMgbGVmdCB0byBkZWNvZGUnLCB7IHBhcmFtLCBieXRlc0xlZnQ6IGJ5dGVzLmxlbmd0aCB9KTtcbiAgICB9XG4gICAgY29uc3QgYm9vbEJ5dGVzID0gYnl0ZXMuc3ViYXJyYXkoMCwgdXRpbHNfanNfMS5XT1JEX1NJWkUpO1xuICAgIGNvbnN0IGxpbWl0ID0gbnVtYmVyc0xpbWl0c19qc18xLm51bWJlckxpbWl0cy5nZXQocGFyYW0udHlwZSk7XG4gICAgaWYgKCFsaW1pdCkge1xuICAgICAgICB0aHJvdyBuZXcgd2ViM19lcnJvcnNfMS5BYmlFcnJvcigncHJvdmlkZWQgYWJpIGNvbnRhaW5zIGludmFsaWQgbnVtYmVyIGRhdGF0eXBlJywgeyB0eXBlOiBwYXJhbS50eXBlIH0pO1xuICAgIH1cbiAgICBjb25zdCBudW1iZXJSZXN1bHQgPSB1aW50OEFycmF5VG9CaWdJbnQoYm9vbEJ5dGVzLCBsaW1pdC5tYXgpO1xuICAgIGlmIChudW1iZXJSZXN1bHQgPCBsaW1pdC5taW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ2RlY29kZWQgdmFsdWUgaXMgbGVzcyB0aGVuIG1pbmltdW0gZm9yIGdpdmVuIHR5cGUnLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICAgICAgdmFsdWU6IG51bWJlclJlc3VsdCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICBtaW5pbXVtOiBsaW1pdC5taW4udG9TdHJpbmcoKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChudW1iZXJSZXN1bHQgPiBsaW1pdC5tYXgpIHtcbiAgICAgICAgdGhyb3cgbmV3IHdlYjNfZXJyb3JzXzEuQWJpRXJyb3IoJ2RlY29kZWQgdmFsdWUgaXMgZ3JlYXRlciB0aGVuIG1heGltdW0gZm9yIGdpdmVuIHR5cGUnLCB7XG4gICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICAgICAgdmFsdWU6IG51bWJlclJlc3VsdCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICBtYXhpbXVtOiBsaW1pdC5tYXgudG9TdHJpbmcoKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdDogbnVtYmVyUmVzdWx0LFxuICAgICAgICBlbmNvZGVkOiBieXRlcy5zdWJhcnJheSh1dGlsc19qc18xLldPUkRfU0laRSksXG4gICAgICAgIGNvbnN1bWVkOiB1dGlsc19qc18xLldPUkRfU0laRSxcbiAgICB9O1xufVxuZXhwb3J0cy5kZWNvZGVOdW1iZXIgPSBkZWNvZGVOdW1iZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1udW1iZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/numbersLimits.js":
/*!*******************************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/numbersLimits.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.numberLimits = void 0;\n/*\n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/\nexports.numberLimits = new Map();\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n    exports.numberLimits.set(`uint${i}`, {\n        min: BigInt(0),\n        max: base - BigInt(1),\n    });\n    exports.numberLimits.set(`int${i}`, {\n        min: -base / BigInt(2),\n        max: base / BigInt(2) - BigInt(1),\n    });\n    base *= BigInt(256);\n}\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexports.numberLimits.set(`int`, exports.numberLimits.get('int256'));\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexports.numberLimits.set(`uint`, exports.numberLimits.get('uint256'));\n//# sourceMappingURL=numbersLimits.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL251bWJlcnNMaW1pdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsd0JBQXdCO0FBQ3hCLGdCQUFnQixVQUFVO0FBQzFCLG9DQUFvQyxFQUFFO0FBQ3RDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUNBQW1DLEVBQUU7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2lzc3Vlcl9ob2xkZXJfdmVyaWZpZXIvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL251bWJlcnNMaW1pdHMuanM/ZDg0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5udW1iZXJMaW1pdHMgPSB2b2lkIDA7XG4vKlxuICogdGhpcyB2YXJpYWJsZSBjb250YWlucyB0aGUgcHJlY2FsY3VsYXRlZCBsaW1pdHMgZm9yIGFsbCB0aGUgbnVtYmVycyBmb3IgdWludCBhbmQgaW50IHR5cGVzXG4qL1xuZXhwb3J0cy5udW1iZXJMaW1pdHMgPSBuZXcgTWFwKCk7XG5sZXQgYmFzZSA9IEJpZ0ludCgyNTYpOyAvLyAyIF4gOCA9IDI1NlxuZm9yIChsZXQgaSA9IDg7IGkgPD0gMjU2OyBpICs9IDgpIHtcbiAgICBleHBvcnRzLm51bWJlckxpbWl0cy5zZXQoYHVpbnQke2l9YCwge1xuICAgICAgICBtaW46IEJpZ0ludCgwKSxcbiAgICAgICAgbWF4OiBiYXNlIC0gQmlnSW50KDEpLFxuICAgIH0pO1xuICAgIGV4cG9ydHMubnVtYmVyTGltaXRzLnNldChgaW50JHtpfWAsIHtcbiAgICAgICAgbWluOiAtYmFzZSAvIEJpZ0ludCgyKSxcbiAgICAgICAgbWF4OiBiYXNlIC8gQmlnSW50KDIpIC0gQmlnSW50KDEpLFxuICAgIH0pO1xuICAgIGJhc2UgKj0gQmlnSW50KDI1Nik7XG59XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuZXhwb3J0cy5udW1iZXJMaW1pdHMuc2V0KGBpbnRgLCBleHBvcnRzLm51bWJlckxpbWl0cy5nZXQoJ2ludDI1NicpKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG5leHBvcnRzLm51bWJlckxpbWl0cy5zZXQoYHVpbnRgLCBleHBvcnRzLm51bWJlckxpbWl0cy5nZXQoJ3VpbnQyNTYnKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1udW1iZXJzTGltaXRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/numbersLimits.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/string.js":
/*!************************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/string.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeString = exports.encodeString = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst bytes_js_1 = __webpack_require__(/*! ./bytes.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/bytes.js\");\nfunction encodeString(_param, input) {\n    if (typeof input !== 'string') {\n        throw new web3_errors_1.AbiError('invalid input, should be string', { input });\n    }\n    const bytes = (0, web3_utils_1.utf8ToBytes)(input);\n    return (0, bytes_js_1.encodeBytes)({ type: 'bytes', name: '' }, bytes);\n}\nexports.encodeString = encodeString;\nfunction decodeString(_param, bytes) {\n    const r = (0, bytes_js_1.decodeBytes)({ type: 'bytes', name: '' }, bytes);\n    return {\n        result: (0, web3_utils_1.hexToUtf8)(r.result),\n        encoded: r.encoded,\n        consumed: r.consumed,\n    };\n}\nexports.decodeString = decodeString;\n//# sourceMappingURL=string.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyxvQkFBb0I7QUFDM0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLHlGQUFhO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLHVGQUFZO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHFHQUFZO0FBQ3ZDO0FBQ0E7QUFDQSw4RUFBOEUsT0FBTztBQUNyRjtBQUNBO0FBQ0EseUNBQXlDLHlCQUF5QjtBQUNsRTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLDRDQUE0Qyx5QkFBeUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXNzdWVyX2hvbGRlcl92ZXJpZmllci8uL3NyYy9wYWdlcy9hcGkvbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvY29tbW9uanMvY29kZXJzL2Jhc2Uvc3RyaW5nLmpzPzgwNDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZVN0cmluZyA9IGV4cG9ydHMuZW5jb2RlU3RyaW5nID0gdm9pZCAwO1xuLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5jb25zdCB3ZWIzX2Vycm9yc18xID0gcmVxdWlyZShcIndlYjMtZXJyb3JzXCIpO1xuY29uc3Qgd2ViM191dGlsc18xID0gcmVxdWlyZShcIndlYjMtdXRpbHNcIik7XG5jb25zdCBieXRlc19qc18xID0gcmVxdWlyZShcIi4vYnl0ZXMuanNcIik7XG5mdW5jdGlvbiBlbmNvZGVTdHJpbmcoX3BhcmFtLCBpbnB1dCkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyB3ZWIzX2Vycm9yc18xLkFiaUVycm9yKCdpbnZhbGlkIGlucHV0LCBzaG91bGQgYmUgc3RyaW5nJywgeyBpbnB1dCB9KTtcbiAgICB9XG4gICAgY29uc3QgYnl0ZXMgPSAoMCwgd2ViM191dGlsc18xLnV0ZjhUb0J5dGVzKShpbnB1dCk7XG4gICAgcmV0dXJuICgwLCBieXRlc19qc18xLmVuY29kZUJ5dGVzKSh7IHR5cGU6ICdieXRlcycsIG5hbWU6ICcnIH0sIGJ5dGVzKTtcbn1cbmV4cG9ydHMuZW5jb2RlU3RyaW5nID0gZW5jb2RlU3RyaW5nO1xuZnVuY3Rpb24gZGVjb2RlU3RyaW5nKF9wYXJhbSwgYnl0ZXMpIHtcbiAgICBjb25zdCByID0gKDAsIGJ5dGVzX2pzXzEuZGVjb2RlQnl0ZXMpKHsgdHlwZTogJ2J5dGVzJywgbmFtZTogJycgfSwgYnl0ZXMpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdDogKDAsIHdlYjNfdXRpbHNfMS5oZXhUb1V0ZjgpKHIucmVzdWx0KSxcbiAgICAgICAgZW5jb2RlZDogci5lbmNvZGVkLFxuICAgICAgICBjb25zdW1lZDogci5jb25zdW1lZCxcbiAgICB9O1xufVxuZXhwb3J0cy5kZWNvZGVTdHJpbmcgPSBkZWNvZGVTdHJpbmc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/string.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/tuple.js":
/*!***********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/tuple.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeTuple = exports.encodeTuple = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\n// eslint-disable-next-line import/no-cycle\nconst index_js_1 = __webpack_require__(/*! ./index.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/utils.js\");\nconst utils_js_2 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nconst number_js_1 = __webpack_require__(/*! ./number.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\");\nfunction encodeTuple(param, input) {\n    var _a, _b, _c;\n    let dynamic = false;\n    if (!Array.isArray(input) && typeof input !== 'object') {\n        throw new web3_errors_1.AbiError('param must be either Array or Object', {\n            param,\n            input,\n        });\n    }\n    const narrowedInput = input;\n    const encoded = [];\n    for (let i = 0; i < ((_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0); i += 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const paramComponent = param.components[i];\n        let result;\n        if (Array.isArray(narrowedInput)) {\n            if (i >= narrowedInput.length) {\n                throw new web3_errors_1.AbiError('input param length missmatch', {\n                    param,\n                    input,\n                });\n            }\n            result = (0, index_js_1.encodeParamFromAbiParameter)(paramComponent, narrowedInput[i]);\n        }\n        else {\n            const paramInput = narrowedInput[(_c = paramComponent.name) !== null && _c !== void 0 ? _c : ''];\n            // eslint-disable-next-line no-null/no-null\n            if (paramInput === undefined || paramInput === null) {\n                throw new web3_errors_1.AbiError('missing input defined in abi', {\n                    param,\n                    input,\n                    paramName: paramComponent.name,\n                });\n            }\n            result = (0, index_js_1.encodeParamFromAbiParameter)(paramComponent, paramInput);\n        }\n        if (result.dynamic) {\n            dynamic = true;\n        }\n        encoded.push(result);\n    }\n    if (dynamic) {\n        return {\n            dynamic: true,\n            encoded: (0, utils_js_1.encodeDynamicParams)(encoded),\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: (0, web3_utils_1.uint8ArrayConcat)(...encoded.map(e => e.encoded)),\n    };\n}\nexports.encodeTuple = encodeTuple;\nfunction decodeTuple(param, bytes) {\n    const result = {\n        __length__: 0,\n    };\n    // tracks how much static params consumed bytes\n    let consumed = 0;\n    if (!param.components) {\n        return {\n            result,\n            encoded: bytes,\n            consumed,\n        };\n    }\n    // track how much dynamic params consumed bytes\n    let dynamicConsumed = 0;\n    for (const [index, childParam] of param.components.entries()) {\n        let decodedResult;\n        if ((0, utils_js_2.isDynamic)(childParam)) {\n            // if dynamic, we will have offset encoded\n            const offsetResult = (0, number_js_1.decodeNumber)({ type: 'uint32', name: '' }, bytes.subarray(consumed));\n            // offset counts from start of original byte sequence\n            decodedResult = (0, index_js_1.decodeParamFromAbiParameter)(childParam, bytes.subarray(Number(offsetResult.result)));\n            consumed += offsetResult.consumed;\n            dynamicConsumed += decodedResult.consumed;\n        }\n        else {\n            // static param, just decode\n            decodedResult = (0, index_js_1.decodeParamFromAbiParameter)(childParam, bytes.subarray(consumed));\n            consumed += decodedResult.consumed;\n        }\n        result.__length__ += 1;\n        result[index] = decodedResult.result;\n        if (childParam.name && childParam.name !== '') {\n            result[childParam.name] = decodedResult.result;\n        }\n    }\n    return {\n        encoded: bytes.subarray(consumed + dynamicConsumed),\n        result,\n        consumed: consumed + dynamicConsumed,\n    };\n}\nexports.decodeTuple = decodeTuple;\n//# sourceMappingURL=tuple.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/tuple.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/utils.js":
/*!***********************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/utils.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeDynamicParams = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nconst number_js_1 = __webpack_require__(/*! ./number.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/number.js\");\nfunction encodeDynamicParams(encodedParams) {\n    let staticSize = 0;\n    let dynamicSize = 0;\n    const staticParams = [];\n    const dynamicParams = [];\n    // figure out static size\n    for (const encodedParam of encodedParams) {\n        if (encodedParam.dynamic) {\n            staticSize += utils_js_1.WORD_SIZE;\n        }\n        else {\n            staticSize += encodedParam.encoded.length;\n        }\n    }\n    for (const encodedParam of encodedParams) {\n        if (encodedParam.dynamic) {\n            staticParams.push((0, number_js_1.encodeNumber)({ type: 'uint256', name: '' }, staticSize + dynamicSize));\n            dynamicParams.push(encodedParam);\n            dynamicSize += encodedParam.encoded.length;\n        }\n        else {\n            staticParams.push(encodedParam);\n        }\n    }\n    return (0, web3_utils_1.uint8ArrayConcat)(...staticParams.map(p => p.encoded), ...dynamicParams.map(p => p.encoded));\n}\nexports.encodeDynamicParams = encodeDynamicParams;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsdUZBQVk7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsaUdBQWE7QUFDeEMsb0JBQW9CLG1CQUFPLENBQUMsdUdBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsMkJBQTJCO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2lzc3Vlcl9ob2xkZXJfdmVyaWZpZXIvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9iYXNlL3V0aWxzLmpzP2E1YmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmVuY29kZUR5bmFtaWNQYXJhbXMgPSB2b2lkIDA7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmNvbnN0IHdlYjNfdXRpbHNfMSA9IHJlcXVpcmUoXCJ3ZWIzLXV0aWxzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy5qc1wiKTtcbmNvbnN0IG51bWJlcl9qc18xID0gcmVxdWlyZShcIi4vbnVtYmVyLmpzXCIpO1xuZnVuY3Rpb24gZW5jb2RlRHluYW1pY1BhcmFtcyhlbmNvZGVkUGFyYW1zKSB7XG4gICAgbGV0IHN0YXRpY1NpemUgPSAwO1xuICAgIGxldCBkeW5hbWljU2l6ZSA9IDA7XG4gICAgY29uc3Qgc3RhdGljUGFyYW1zID0gW107XG4gICAgY29uc3QgZHluYW1pY1BhcmFtcyA9IFtdO1xuICAgIC8vIGZpZ3VyZSBvdXQgc3RhdGljIHNpemVcbiAgICBmb3IgKGNvbnN0IGVuY29kZWRQYXJhbSBvZiBlbmNvZGVkUGFyYW1zKSB7XG4gICAgICAgIGlmIChlbmNvZGVkUGFyYW0uZHluYW1pYykge1xuICAgICAgICAgICAgc3RhdGljU2l6ZSArPSB1dGlsc19qc18xLldPUkRfU0laRTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN0YXRpY1NpemUgKz0gZW5jb2RlZFBhcmFtLmVuY29kZWQubGVuZ3RoO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgZW5jb2RlZFBhcmFtIG9mIGVuY29kZWRQYXJhbXMpIHtcbiAgICAgICAgaWYgKGVuY29kZWRQYXJhbS5keW5hbWljKSB7XG4gICAgICAgICAgICBzdGF0aWNQYXJhbXMucHVzaCgoMCwgbnVtYmVyX2pzXzEuZW5jb2RlTnVtYmVyKSh7IHR5cGU6ICd1aW50MjU2JywgbmFtZTogJycgfSwgc3RhdGljU2l6ZSArIGR5bmFtaWNTaXplKSk7XG4gICAgICAgICAgICBkeW5hbWljUGFyYW1zLnB1c2goZW5jb2RlZFBhcmFtKTtcbiAgICAgICAgICAgIGR5bmFtaWNTaXplICs9IGVuY29kZWRQYXJhbS5lbmNvZGVkLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN0YXRpY1BhcmFtcy5wdXNoKGVuY29kZWRQYXJhbSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICgwLCB3ZWIzX3V0aWxzXzEudWludDhBcnJheUNvbmNhdCkoLi4uc3RhdGljUGFyYW1zLm1hcChwID0+IHAuZW5jb2RlZCksIC4uLmR5bmFtaWNQYXJhbXMubWFwKHAgPT4gcC5lbmNvZGVkKSk7XG59XG5leHBvcnRzLmVuY29kZUR5bmFtaWNQYXJhbXMgPSBlbmNvZGVEeW5hbWljUGFyYW1zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/utils.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/decode.js":
/*!*******************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/decode.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeParameters = void 0;\nconst web3_validator_1 = __webpack_require__(/*! web3-validator */ \"(api)/./src/pages/api/node_modules/web3-validator/lib/commonjs/index.js\");\nconst tuple_js_1 = __webpack_require__(/*! ./base/tuple.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/tuple.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\nfunction decodeParameters(abis, bytes, _loose) {\n    const abiParams = (0, utils_js_1.toAbiParams)(abis);\n    const bytesArray = web3_validator_1.utils.hexToUint8Array(bytes);\n    return (0, tuple_js_1.decodeTuple)({ type: 'tuple', name: '', components: abiParams }, bytesArray).result;\n}\nexports.decodeParameters = decodeParameters;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2NvZGVycy9kZWNvZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4Qix5QkFBeUIsbUJBQU8sQ0FBQywrRkFBZ0I7QUFDakQsbUJBQW1CLG1CQUFPLENBQUMsMEdBQWlCO0FBQzVDLG1CQUFtQixtQkFBTyxDQUFDLGdHQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxnREFBZ0Q7QUFDekY7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pc3N1ZXJfaG9sZGVyX3ZlcmlmaWVyLy4vc3JjL3BhZ2VzL2FwaS9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9jb21tb25qcy9jb2RlcnMvZGVjb2RlLmpzPzMzZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlUGFyYW1ldGVycyA9IHZvaWQgMDtcbmNvbnN0IHdlYjNfdmFsaWRhdG9yXzEgPSByZXF1aXJlKFwid2ViMy12YWxpZGF0b3JcIik7XG5jb25zdCB0dXBsZV9qc18xID0gcmVxdWlyZShcIi4vYmFzZS90dXBsZS5qc1wiKTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmZ1bmN0aW9uIGRlY29kZVBhcmFtZXRlcnMoYWJpcywgYnl0ZXMsIF9sb29zZSkge1xuICAgIGNvbnN0IGFiaVBhcmFtcyA9ICgwLCB1dGlsc19qc18xLnRvQWJpUGFyYW1zKShhYmlzKTtcbiAgICBjb25zdCBieXRlc0FycmF5ID0gd2ViM192YWxpZGF0b3JfMS51dGlscy5oZXhUb1VpbnQ4QXJyYXkoYnl0ZXMpO1xuICAgIHJldHVybiAoMCwgdHVwbGVfanNfMS5kZWNvZGVUdXBsZSkoeyB0eXBlOiAndHVwbGUnLCBuYW1lOiAnJywgY29tcG9uZW50czogYWJpUGFyYW1zIH0sIGJ5dGVzQXJyYXkpLnJlc3VsdDtcbn1cbmV4cG9ydHMuZGVjb2RlUGFyYW1ldGVycyA9IGRlY29kZVBhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/decode.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/encode.js":
/*!*******************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/encode.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.inferTypesAndEncodeParameters = exports.encodeParameters = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst web3_validator_1 = __webpack_require__(/*! web3-validator */ \"(api)/./src/pages/api/node_modules/web3-validator/lib/commonjs/index.js\");\nconst index_js_1 = __webpack_require__(/*! ./base/index.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/base/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\");\n/**\n * @param params - The params to infer the ABI from\n * @returns The inferred ABI\n * @example\n * ```\n * inferParamsAbi([1, -1, 'hello', '0x1234', ])\n * ```\n * > [{ type: 'int256' }, { type: 'uint256' }, { type: 'string' }, { type: 'bytes' }]\n * ```\n */\nfunction inferParamsAbi(params) {\n    const abi = [];\n    params.forEach(param => {\n        if (Array.isArray(param)) {\n            const inferredParams = inferParamsAbi(param);\n            abi.push({\n                type: 'tuple',\n                components: inferredParams,\n                name: '',\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            abi.push({ type: (0, web3_utils_1.toHex)(param, true) });\n        }\n    });\n    return abi;\n}\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.\n * @param params - The actual parameters to encode.\n * @returns - The ABI encoded parameters\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"uint256\", \"string\"],\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nfunction encodeParameters(abi, params) {\n    if ((abi === null || abi === void 0 ? void 0 : abi.length) !== params.length) {\n        throw new web3_errors_1.AbiError('Invalid number of values received for given ABI', {\n            expected: abi === null || abi === void 0 ? void 0 : abi.length,\n            received: params.length,\n        });\n    }\n    const abiParams = (0, utils_js_1.toAbiParams)(abi);\n    return web3_validator_1.utils.uint8ArrayToHexString((0, index_js_1.encodeTuple)({ type: 'tuple', name: '', components: abiParams }, params).encoded);\n}\nexports.encodeParameters = encodeParameters;\n/**\n * Infer a smart contract method parameter type and then encode this parameter.\n * @param params - The parameters to encode.\n * @returns - The ABI encoded parameters\n *\n * @remarks\n * This method is useful when you don't know the type of the parameters you want to encode. It will infer the type of the parameters and then encode them.\n * However, it is not recommended to use this method when you know the type of the parameters you want to encode. In this case, use the {@link encodeParameters} method instead.\n * The type inference is not perfect and can lead to unexpected results. Especially when you want to encode an array, uint that is not uint256 or bytes....\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nfunction inferTypesAndEncodeParameters(params) {\n    try {\n        const abiParams = inferParamsAbi(params);\n        return web3_validator_1.utils.uint8ArrayToHexString((0, index_js_1.encodeTuple)({ type: 'tuple', name: '', components: abiParams }, params).encoded);\n    }\n    catch (e) {\n        // throws If the inferred params type caused an error\n        throw new web3_errors_1.AbiError('Could not infer types from given params', {\n            params,\n        });\n    }\n}\nexports.inferTypesAndEncodeParameters = inferTypesAndEncodeParameters;\n//# sourceMappingURL=encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/encode.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js":
/*!******************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDynamic = exports.extractArrayType = exports.toAbiParams = exports.isAbiParameter = exports.convertExternalAbiParameter = exports.allocUnsafe = exports.alloc = exports.WORD_SIZE = void 0;\nconst abitype_1 = __webpack_require__(/*! abitype */ \"(api)/./src/pages/api/node_modules/abitype/dist/index.mjs\");\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js\");\nexports.WORD_SIZE = 32;\nfunction alloc(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.alloc) !== undefined) {\n        const buf = globalThis.Buffer.alloc(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\nexports.alloc = alloc;\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nfunction allocUnsafe(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.allocUnsafe) !== undefined) {\n        const buf = globalThis.Buffer.allocUnsafe(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\nexports.allocUnsafe = allocUnsafe;\nfunction convertExternalAbiParameter(abiParam) {\n    var _a, _b;\n    return Object.assign(Object.assign({}, abiParam), { name: (_a = abiParam.name) !== null && _a !== void 0 ? _a : '', components: (_b = abiParam.components) === null || _b === void 0 ? void 0 : _b.map(c => convertExternalAbiParameter(c)) });\n}\nexports.convertExternalAbiParameter = convertExternalAbiParameter;\nfunction isAbiParameter(param) {\n    return (!(0, web3_utils_1.isNullish)(param) &&\n        typeof param === 'object' &&\n        !(0, web3_utils_1.isNullish)(param.type) &&\n        typeof param.type === 'string');\n}\nexports.isAbiParameter = isAbiParameter;\nfunction toAbiParams(abi) {\n    return abi.map(input => {\n        var _a;\n        if (isAbiParameter(input)) {\n            return input;\n        }\n        if (typeof input === 'string') {\n            return convertExternalAbiParameter((0, abitype_1.parseAbiParameter)(input.replace(/tuple/, '')));\n        }\n        if ((0, utils_js_1.isSimplifiedStructFormat)(input)) {\n            const structName = Object.keys(input)[0];\n            const structInfo = (0, utils_js_1.mapStructNameAndType)(structName);\n            structInfo.name = (_a = structInfo.name) !== null && _a !== void 0 ? _a : '';\n            return Object.assign(Object.assign({}, structInfo), { components: (0, utils_js_1.mapStructToCoderFormat)(input[structName]) });\n        }\n        throw new web3_errors_1.AbiError('Invalid abi');\n    });\n}\nexports.toAbiParams = toAbiParams;\nfunction extractArrayType(param) {\n    const arrayParenthesisStart = param.type.lastIndexOf('[');\n    const arrayParamType = param.type.substring(0, arrayParenthesisStart);\n    const sizeString = param.type.substring(arrayParenthesisStart);\n    let size = -1;\n    if (sizeString !== '[]') {\n        size = Number(sizeString.slice(1, -1));\n        // eslint-disable-next-line no-restricted-globals\n        if (isNaN(size)) {\n            throw new web3_errors_1.AbiError('Invalid fixed array size', { size: sizeString });\n        }\n    }\n    return {\n        param: { type: arrayParamType, name: '', components: param.components },\n        size,\n    };\n}\nexports.extractArrayType = extractArrayType;\n/**\n * Param is dynamic if it's dynamic base type or if some of his children (components, array items)\n * is of dynamic type\n * @param param\n */\nfunction isDynamic(param) {\n    var _a, _b;\n    if (param.type === 'string' || param.type === 'bytes' || param.type.endsWith('[]'))\n        return true;\n    if (param.type === 'tuple') {\n        return (_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.some(isDynamic)) !== null && _b !== void 0 ? _b : false;\n    }\n    if (param.type.endsWith(']')) {\n        return isDynamic(extractArrayType(param).param);\n    }\n    return false;\n}\nexports.isDynamic = isDynamic;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/utils.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/decode_contract_error_data.js":
/*!********************************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/decode_contract_error_data.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeContractErrorData = void 0;\nconst errors_api_js_1 = __webpack_require__(/*! ./api/errors_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/errors_api.js\");\nconst parameters_api_js_1 = __webpack_require__(/*! ./api/parameters_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/parameters_api.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js\");\nconst decodeContractErrorData = (errorsAbi, error) => {\n    if (error === null || error === void 0 ? void 0 : error.data) {\n        let errorName;\n        let errorSignature;\n        let errorArgs;\n        try {\n            const errorSha = error.data.slice(0, 10);\n            const errorAbi = errorsAbi.find(abi => (0, errors_api_js_1.encodeErrorSignature)(abi).startsWith(errorSha));\n            if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {\n                errorName = errorAbi.name;\n                errorSignature = (0, utils_js_1.jsonInterfaceMethodToString)(errorAbi);\n                // decode abi.inputs according to EIP-838\n                errorArgs = (0, parameters_api_js_1.decodeParameters)([...errorAbi.inputs], error.data.substring(10));\n            }\n        }\n        catch (err) {\n            console.error(err);\n        }\n        if (errorName) {\n            error.setDecodedProperties(errorName, errorSignature, errorArgs);\n        }\n    }\n};\nexports.decodeContractErrorData = decodeContractErrorData;\n//# sourceMappingURL=decode_contract_error_data.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2RlY29kZV9jb250cmFjdF9lcnJvcl9kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isd0JBQXdCLG1CQUFPLENBQUMsMkdBQXFCO0FBQ3JELDRCQUE0QixtQkFBTyxDQUFDLG1IQUF5QjtBQUM3RCxtQkFBbUIsbUJBQU8sQ0FBQyx5RkFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXNzdWVyX2hvbGRlcl92ZXJpZmllci8uL3NyYy9wYWdlcy9hcGkvbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvY29tbW9uanMvZGVjb2RlX2NvbnRyYWN0X2Vycm9yX2RhdGEuanM/ZDdjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVDb250cmFjdEVycm9yRGF0YSA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc19hcGlfanNfMSA9IHJlcXVpcmUoXCIuL2FwaS9lcnJvcnNfYXBpLmpzXCIpO1xuY29uc3QgcGFyYW1ldGVyc19hcGlfanNfMSA9IHJlcXVpcmUoXCIuL2FwaS9wYXJhbWV0ZXJzX2FwaS5qc1wiKTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmNvbnN0IGRlY29kZUNvbnRyYWN0RXJyb3JEYXRhID0gKGVycm9yc0FiaSwgZXJyb3IpID0+IHtcbiAgICBpZiAoZXJyb3IgPT09IG51bGwgfHwgZXJyb3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVycm9yLmRhdGEpIHtcbiAgICAgICAgbGV0IGVycm9yTmFtZTtcbiAgICAgICAgbGV0IGVycm9yU2lnbmF0dXJlO1xuICAgICAgICBsZXQgZXJyb3JBcmdzO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZXJyb3JTaGEgPSBlcnJvci5kYXRhLnNsaWNlKDAsIDEwKTtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yQWJpID0gZXJyb3JzQWJpLmZpbmQoYWJpID0+ICgwLCBlcnJvcnNfYXBpX2pzXzEuZW5jb2RlRXJyb3JTaWduYXR1cmUpKGFiaSkuc3RhcnRzV2l0aChlcnJvclNoYSkpO1xuICAgICAgICAgICAgaWYgKGVycm9yQWJpID09PSBudWxsIHx8IGVycm9yQWJpID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvckFiaS5pbnB1dHMpIHtcbiAgICAgICAgICAgICAgICBlcnJvck5hbWUgPSBlcnJvckFiaS5uYW1lO1xuICAgICAgICAgICAgICAgIGVycm9yU2lnbmF0dXJlID0gKDAsIHV0aWxzX2pzXzEuanNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nKShlcnJvckFiaSk7XG4gICAgICAgICAgICAgICAgLy8gZGVjb2RlIGFiaS5pbnB1dHMgYWNjb3JkaW5nIHRvIEVJUC04MzhcbiAgICAgICAgICAgICAgICBlcnJvckFyZ3MgPSAoMCwgcGFyYW1ldGVyc19hcGlfanNfMS5kZWNvZGVQYXJhbWV0ZXJzKShbLi4uZXJyb3JBYmkuaW5wdXRzXSwgZXJyb3IuZGF0YS5zdWJzdHJpbmcoMTApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yTmFtZSkge1xuICAgICAgICAgICAgZXJyb3Iuc2V0RGVjb2RlZFByb3BlcnRpZXMoZXJyb3JOYW1lLCBlcnJvclNpZ25hdHVyZSwgZXJyb3JBcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnRzLmRlY29kZUNvbnRyYWN0RXJyb3JEYXRhID0gZGVjb2RlQ29udHJhY3RFcnJvckRhdGE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGVfY29udHJhY3RfZXJyb3JfZGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/decode_contract_error_data.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/eip_712.js":
/*!*************************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/eip_712.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getMessage = void 0;\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst encode_js_1 = __webpack_require__(/*! ./coders/encode.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/coders/encode.js\");\nconst TYPE_REGEX = /^\\w+/;\nconst ARRAY_REGEX = /^(.*)\\[([0-9]*?)]$/;\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n */\nconst getDependencies = (typedData, type, dependencies = []) => {\n    const match = type.match(TYPE_REGEX);\n    const actualType = match[0];\n    if (dependencies.includes(actualType)) {\n        return dependencies;\n    }\n    if (!typedData.types[actualType]) {\n        return dependencies;\n    }\n    return [\n        actualType,\n        ...typedData.types[actualType].reduce((previous, _type) => [\n            ...previous,\n            ...getDependencies(typedData, _type.type, previous).filter(dependency => !previous.includes(dependency)),\n        ], []),\n    ];\n};\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Options} [options]\n * @return {string}\n */\nconst encodeType = (typedData, type) => {\n    const [primary, ...dependencies] = getDependencies(typedData, type);\n    // eslint-disable-next-line @typescript-eslint/require-array-sort-compare\n    const types = [primary, ...dependencies.sort()];\n    return types\n        .map(dependency => \n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `${dependency}(${typedData.types[dependency].map(_type => `${_type.type} ${_type.name}`)})`)\n        .join('');\n};\n/**\n * Get a type string as hash.\n */\nconst getTypeHash = (typedData, type) => (0, web3_utils_1.keccak256)(encodeType(typedData, type));\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n */\nconst getStructHash = (typedData, type, data) => (0, web3_utils_1.keccak256)(encodeData(typedData, type, data));\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n */\nconst getMessage = (typedData, hash) => {\n    const EIP_191_PREFIX = '1901';\n    const message = `0x${EIP_191_PREFIX}${getStructHash(typedData, 'EIP712Domain', typedData.domain).substring(2)}${getStructHash(typedData, typedData.primaryType, typedData.message).substring(2)}`;\n    if (hash) {\n        return (0, web3_utils_1.keccak256)(message);\n    }\n    return message;\n};\nexports.getMessage = getMessage;\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n */\nconst encodeValue = (typedData, type, data) => {\n    const match = type.match(ARRAY_REGEX);\n    // Checks for array types\n    if (match) {\n        const arrayType = match[1];\n        const length = Number(match[2]) || undefined;\n        if (!Array.isArray(data)) {\n            throw new web3_errors_1.AbiError('Cannot encode data: value is not of array type', {\n                data,\n            });\n        }\n        if (length && data.length !== length) {\n            throw new web3_errors_1.AbiError(`Cannot encode data: expected length of ${length}, but got ${data.length}`, {\n                data,\n            });\n        }\n        const encodedData = data.map(item => encodeValue(typedData, arrayType, item));\n        const types = encodedData.map(item => item[0]);\n        const values = encodedData.map(item => item[1]);\n        return ['bytes32', (0, web3_utils_1.keccak256)((0, encode_js_1.encodeParameters)(types, values))];\n    }\n    if (typedData.types[type]) {\n        return ['bytes32', getStructHash(typedData, type, data)];\n    }\n    // Strings and arbitrary byte arrays are hashed to bytes32\n    if (type === 'string') {\n        return ['bytes32', (0, web3_utils_1.keccak256)(data)];\n    }\n    if (type === 'bytes') {\n        return ['bytes32', (0, web3_utils_1.keccak256)(data)];\n    }\n    return [type, data];\n};\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n */\nconst encodeData = (typedData, type, data) => {\n    const [types, values] = typedData.types[type].reduce(([_types, _values], field) => {\n        if ((0, web3_utils_1.isNullish)(data[field.name]) || (0, web3_utils_1.isNullish)(data[field.name])) {\n            throw new web3_errors_1.AbiError(`Cannot encode data: missing data for '${field.name}'`, {\n                data,\n                field,\n            });\n        }\n        const value = data[field.name];\n        const [_type, encodedValue] = encodeValue(typedData, field.type, value);\n        return [\n            [..._types, _type],\n            [..._values, encodedValue],\n        ];\n    }, [['bytes32'], [getTypeHash(typedData, type)]]);\n    return (0, encode_js_1.encodeParameters)(types, values);\n};\n//# sourceMappingURL=eip_712.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/eip_712.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/index.js":
/*!***********************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getEncodedEip712Data = void 0;\n__exportStar(__webpack_require__(/*! ./api/errors_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/errors_api.js\"), exports);\n__exportStar(__webpack_require__(/*! ./api/events_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/events_api.js\"), exports);\n__exportStar(__webpack_require__(/*! ./api/functions_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/functions_api.js\"), exports);\n__exportStar(__webpack_require__(/*! ./api/logs_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/logs_api.js\"), exports);\n__exportStar(__webpack_require__(/*! ./api/parameters_api.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/api/parameters_api.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./decode_contract_error_data.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/decode_contract_error_data.js\"), exports);\nvar eip_712_js_1 = __webpack_require__(/*! ./eip_712.js */ \"(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/eip_712.js\");\nObject.defineProperty(exports, \"getEncodedEip712Data\", ({ enumerable: true, get: function () { return eip_712_js_1.getMessage; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsYUFBYSxtQkFBTyxDQUFDLDJHQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsMkdBQXFCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyxpSEFBd0I7QUFDN0MsYUFBYSxtQkFBTyxDQUFDLHVHQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsbUhBQXlCO0FBQzlDLGFBQWEsbUJBQU8sQ0FBQyx5RkFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsbUlBQWlDO0FBQ3RELG1CQUFtQixtQkFBTyxDQUFDLDZGQUFjO0FBQ3pDLHdEQUF1RCxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUNsSSIsInNvdXJjZXMiOlsid2VicGFjazovL2lzc3Vlcl9ob2xkZXJfdmVyaWZpZXIvLi9zcmMvcGFnZXMvYXBpL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2NvbW1vbmpzL2luZGV4LmpzPzFiOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRFbmNvZGVkRWlwNzEyRGF0YSA9IHZvaWQgMDtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGkvZXJyb3JzX2FwaS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2V2ZW50c19hcGkuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS9mdW5jdGlvbnNfYXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGkvbG9nc19hcGkuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS9wYXJhbWV0ZXJzX2FwaS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHMuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlY29kZV9jb250cmFjdF9lcnJvcl9kYXRhLmpzXCIpLCBleHBvcnRzKTtcbnZhciBlaXBfNzEyX2pzXzEgPSByZXF1aXJlKFwiLi9laXBfNzEyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0RW5jb2RlZEVpcDcxMkRhdGFcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVpcF83MTJfanNfMS5nZXRNZXNzYWdlOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/index.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js":
/*!***********************************************************************!*\
  !*** ./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.jsonInterfaceMethodToString = exports.flattenTypes = exports.formatParam = exports.formatOddHexstrings = exports.isOddHexstring = exports.mapTypes = exports.mapStructToCoderFormat = exports.mapStructNameAndType = exports.isSimplifiedStructFormat = exports.isAbiConstructorFragment = exports.isAbiFunctionFragment = exports.isAbiEventFragment = exports.isAbiErrorFragment = exports.isAbiFragment = void 0;\nconst web3_errors_1 = __webpack_require__(/*! web3-errors */ \"(api)/./src/pages/api/node_modules/web3-errors/lib/commonjs/index.js\");\nconst web3_utils_1 = __webpack_require__(/*! web3-utils */ \"(api)/./src/pages/api/node_modules/web3-utils/lib/commonjs/index.js\");\nconst isAbiFragment = (item) => !(0, web3_utils_1.isNullish)(item) &&\n    typeof item === 'object' &&\n    !(0, web3_utils_1.isNullish)(item.type) &&\n    ['function', 'event', 'constructor', 'error'].includes(item.type);\nexports.isAbiFragment = isAbiFragment;\nconst isAbiErrorFragment = (item) => !(0, web3_utils_1.isNullish)(item) &&\n    typeof item === 'object' &&\n    !(0, web3_utils_1.isNullish)(item.type) &&\n    item.type === 'error';\nexports.isAbiErrorFragment = isAbiErrorFragment;\nconst isAbiEventFragment = (item) => !(0, web3_utils_1.isNullish)(item) &&\n    typeof item === 'object' &&\n    !(0, web3_utils_1.isNullish)(item.type) &&\n    item.type === 'event';\nexports.isAbiEventFragment = isAbiEventFragment;\nconst isAbiFunctionFragment = (item) => !(0, web3_utils_1.isNullish)(item) &&\n    typeof item === 'object' &&\n    !(0, web3_utils_1.isNullish)(item.type) &&\n    item.type === 'function';\nexports.isAbiFunctionFragment = isAbiFunctionFragment;\nconst isAbiConstructorFragment = (item) => !(0, web3_utils_1.isNullish)(item) &&\n    typeof item === 'object' &&\n    !(0, web3_utils_1.isNullish)(item.type) &&\n    item.type === 'constructor';\nexports.isAbiConstructorFragment = isAbiConstructorFragment;\n/**\n * Check if type is simplified struct format\n */\nconst isSimplifiedStructFormat = (type) => typeof type === 'object' &&\n    typeof type.components === 'undefined' &&\n    typeof type.name === 'undefined';\nexports.isSimplifiedStructFormat = isSimplifiedStructFormat;\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n */\nconst mapStructNameAndType = (structName) => structName.includes('[]')\n    ? { type: 'tuple[]', name: structName.slice(0, -2) }\n    : { type: 'tuple', name: structName };\nexports.mapStructNameAndType = mapStructNameAndType;\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n */\nconst mapStructToCoderFormat = (struct) => {\n    const components = [];\n    for (const key of Object.keys(struct)) {\n        const item = struct[key];\n        if (typeof item === 'object') {\n            components.push(Object.assign(Object.assign({}, (0, exports.mapStructNameAndType)(key)), { components: (0, exports.mapStructToCoderFormat)(item) }));\n        }\n        else {\n            components.push({\n                name: key,\n                type: struct[key],\n            });\n        }\n    }\n    return components;\n};\nexports.mapStructToCoderFormat = mapStructToCoderFormat;\n/**\n * Map types if simplified format is used\n */\nconst mapTypes = (types) => {\n    const mappedTypes = [];\n    for (const type of types) {\n        let modifiedType = type;\n        // Clone object\n        if (typeof type === 'object') {\n            modifiedType = Object.assign({}, type);\n        }\n        // Remap `function` type params to bytes24 since Ethers does not\n        // recognize former type. Solidity docs say `Function` is a bytes24\n        // encoding the contract address followed by the function selector hash.\n        if (typeof type === 'object' && type.type === 'function') {\n            modifiedType = Object.assign(Object.assign({}, type), { type: 'bytes24' });\n        }\n        if ((0, exports.isSimplifiedStructFormat)(modifiedType)) {\n            const structName = Object.keys(modifiedType)[0];\n            mappedTypes.push(Object.assign(Object.assign({}, (0, exports.mapStructNameAndType)(structName)), { components: (0, exports.mapStructToCoderFormat)(modifiedType[structName]) }));\n        }\n        else {\n            mappedTypes.push(modifiedType);\n        }\n    }\n    return mappedTypes;\n};\nexports.mapTypes = mapTypes;\n/**\n * returns true if input is a hexstring and is odd-lengthed\n */\nconst isOddHexstring = (param) => typeof param === 'string' && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;\nexports.isOddHexstring = isOddHexstring;\n/**\n * format odd-length bytes to even-length\n */\nconst formatOddHexstrings = (param) => (0, exports.isOddHexstring)(param) ? `0x0${param.substring(2)}` : param;\nexports.formatOddHexstrings = formatOddHexstrings;\nconst paramTypeBytes = /^bytes([0-9]*)$/;\nconst paramTypeBytesArray = /^bytes([0-9]*)\\[\\]$/;\nconst paramTypeNumber = /^(u?int)([0-9]*)$/;\nconst paramTypeNumberArray = /^(u?int)([0-9]*)\\[\\]$/;\n/**\n * Handle some formatting of params for backwards compatibility with Ethers V4\n */\nconst formatParam = (type, _param) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    // clone if _param is an object\n    const param = typeof _param === 'object' && !Array.isArray(_param) ? Object.assign({}, _param) : _param;\n    // Format BN to string\n    if (param instanceof BigInt || typeof param === 'bigint') {\n        return param.toString(10);\n    }\n    if (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        const paramClone = [...param];\n        return paramClone.map(p => (0, exports.formatParam)(type.replace('[]', ''), p));\n    }\n    // Format correct width for u?int[0-9]*\n    let match = paramTypeNumber.exec(type);\n    if (match) {\n        const size = parseInt(match[2] ? match[2] : '256', 10);\n        if (size / 8 < param.length) {\n            // pad to correct bit width\n            return (0, web3_utils_1.leftPad)(param, size);\n        }\n    }\n    // Format correct length for bytes[0-9]+\n    match = paramTypeBytes.exec(type);\n    if (match) {\n        const hexParam = (0, web3_utils_1.isUint8Array)(param) ? (0, web3_utils_1.toHex)(param) : param;\n        // format to correct length\n        const size = parseInt(match[1], 10);\n        if (size) {\n            let maxSize = size * 2;\n            if (param.startsWith('0x')) {\n                maxSize += 2;\n            }\n            // pad to correct length\n            const paddedParam = hexParam.length < maxSize\n                ? (0, web3_utils_1.rightPad)(param, size * 2)\n                : hexParam;\n            return (0, exports.formatOddHexstrings)(paddedParam);\n        }\n        return (0, exports.formatOddHexstrings)(hexParam);\n    }\n    return param;\n};\nexports.formatParam = formatParam;\n/**\n *  used to flatten json abi inputs/outputs into an array of type-representing-strings\n */\nconst flattenTypes = (includeTuple, puts) => {\n    const types = [];\n    puts.forEach(param => {\n        if (typeof param.components === 'object') {\n            if (!param.type.startsWith('tuple')) {\n                throw new web3_errors_1.AbiError(`Invalid value given \"${param.type}\". Error: components found but type is not tuple.`);\n            }\n            const arrayBracket = param.type.indexOf('[');\n            const suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : '';\n            const result = (0, exports.flattenTypes)(includeTuple, param.components);\n            if (Array.isArray(result) && includeTuple) {\n                types.push(`tuple(${result.join(',')})${suffix}`);\n            }\n            else if (!includeTuple) {\n                types.push(`(${result.join(',')})${suffix}`);\n            }\n            else {\n                types.push(`(${result.join()})`);\n            }\n        }\n        else {\n            types.push(param.type);\n        }\n    });\n    return types;\n};\nexports.flattenTypes = flattenTypes;\n/**\n * Should be used to create full function/event name from json abi\n * returns a string\n */\nconst jsonInterfaceMethodToString = (json) => {\n    var _a, _b, _c, _d;\n    if ((0, exports.isAbiErrorFragment)(json) || (0, exports.isAbiEventFragment)(json) || (0, exports.isAbiFunctionFragment)(json)) {\n        if ((_a = json.name) === null || _a === void 0 ? void 0 : _a.includes('(')) {\n            return json.name;\n        }\n        return `${(_b = json.name) !== null && _b !== void 0 ? _b : ''}(${(0, exports.flattenTypes)(false, (_c = json.inputs) !== null && _c !== void 0 ? _c : []).join(',')})`;\n    }\n    // Constructor fragment\n    return `(${(0, exports.flattenTypes)(false, (_d = json.inputs) !== null && _d !== void 0 ? _d : []).join(',')})`;\n};\nexports.jsonInterfaceMethodToString = jsonInterfaceMethodToString;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/node_modules/web3-eth-abi/lib/commonjs/utils.js\n");

/***/ })

};
;